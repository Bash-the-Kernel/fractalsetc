{"version":3,"sources":["model/fractals/Point.js","model/fractals/LinkedList.js","model/fractals/AbstractFractal.js","model/fractals/SierpinskiTri.js","model/fractals/BoxFractal.js","model/fractals/Mondrian.js","model/Model.js","control/Control.js","view/components/Slider.js","view/components/Dropdown.js","view/components/Header.js","view/components/FractalPane.js","view/App.js","index.js"],"names":["Point","x","y","width","height","vertices","toFill","fillStyle","strokeStyle","lineWidth","this","w","h","square","getRandomColor","Math","random","toString","substr","ListNode","value","next","listNode","LinkedList","length","head","current","isEmpty","toAdd","setNext","i","arr","Array","nodeValue","Symbol","iterator","currentNode","getNext","ret","getValue","AbstractFractal","recursionDepth","origin","constructor","Error","MAX_DEPTH","points","depthToPoints","setRecursionDepth","depth","setPoints","wipeOutDepthToPointArray","pointsNeedBeSet","getRecursionDepth","set","title","getTitle","getWidth","getHeight","getPoints","maxRecursionDepth","SierpinskiTri","ls","r","p","flipCoin","add","BoxFractal","Mondrian","palette","rand","j","round","min","max","Model","name","DEFAULT_DEPTH","DEFAULT_FRACTAL_NAME","setDepthToDefault","fractal","setNameAndFractal","options","setOptions","Fractals","currFrac","getFractal","getReactState","setDimensions","getName","Control","app","sliderEventHandler","event","newDepth","target","state","model","updateFractal","setState","dropdownEventHandler","newName","onWindowResize","getWinWidth","getWinHeight","Slider","id","type","props","sliderMaxValue","autoComplete","sliderInitialValue","onChange","eventHandler","Component","Dropdown","optionsList","Object","entries","dropdownOptions","forEach","op","key","Header","rel","href","FractalPane","toClearPreviousPlot","canvas","refs","context","getContext","clearRect","drawPoint","plotPoints","point","getFillStyle","getStrokeStyle","getLineWidth","beginPath","vert","getVertices","push","moveTo","lineTo","closePath","stroke","fill","ref","App","MARGIN","control","window","addEventListener","innerWidth","innerHeight","className","getOptions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09b664be.chunk.js","sourcesContent":["class Point {\n  constructor(x, y, width, height, vertices = null,\n              toFill = true, fillStyle = null,\n              strokeStyle = null, lineWidth = 1) {\n    this.x = x;\n    this.y = y;\n    this.w = width;\n    this.h = height;\n    this.toFill = toFill;\n    this.lineWidth = lineWidth;\n    this.vertices = vertices ? vertices : this.square();\n    this.fillStyle = fillStyle ? fillStyle : this.getRandomColor();\n    this.strokeStyle = strokeStyle ? strokeStyle : this.fillStyle;\n  }\n\n  square() {\n    return [\n      [this.x, this.y],                   // top left corner\n      [this.x + this.w, this.y],          // top right corner\n      [this.x + this.w, this.y + this.h], // bottom right corner\n      [this.x, this.y + this.h],          // bottom left corner\n    ];\n  }\n\n  getRandomColor() {\n    let ret = (0x1000000 + Math.random() * 0xffffff);\n    return '#' + ret.toString(16).substr(1, 6);\n  }\n\n  getVertices() {\n    return this.vertices;\n  }\n\n  fill() {\n    return this.toFill;\n  }\n  \n  getFillStyle() {\n    return this.fillStyle;\n  }\n\n  getStrokeStyle() {\n    return this.strokeStyle;\n  }\n\n  getLineWidth() {\n    return this.lineWidth;\n  }\n}\n\nexport default Point;\n    \n","class ListNode {\n  constructor(value, next) {\n    this.value = value;\n    this.next = next;\n  }\n  setNext(listNode) {\n    this.next = listNode;\n  }\n  setValue(value) {\n    this.value = value;\n  }\n  getNext() {\n    return this.next;\n  }\n  getValue() {\n    return this.value;\n  }\n}\n\nclass LinkedList {\n  constructor() {\n    this.length = 0;\n    this.head = null;\n    this.current = null;\n  }\n\n  isEmpty() {\n    return this.length === 0;\n  }\n  \n  add(value) {\n    if (this.isEmpty()) {\n      this.head = new ListNode(value, null);\n      this.current = this.head;\n    } else {\n      let toAdd = new ListNode(value, null);\n      this.current.setNext(toAdd);\n      this.current = toAdd;\n    }\n    return ++this.length;\n  }\n\n  toArray() {\n    let i = 0;\n    let arr = new Array(this.length);\n    for (const nodeValue of this) {\n      arr[i++] = nodeValue;\n    }\n    return arr;\n  }\n\n  *[Symbol.iterator]() {\n    if(this.isEmpty()) {\n      return;\n    }\n    let currentNode = this.head;\n    while (currentNode.getNext()) {\n      let ret = currentNode.getValue();\n      currentNode = currentNode.getNext();\n      yield ret;\n    }\n    yield currentNode.getValue();\n  }\n}\n\n\n// let ls = new LinkedList();\n// ls.add(1);\n// ls.add('a');\n// ls.add([-1, 3.14]);\n// ls.add({});\n// console.log(ls.toArray());\n\n// for(const e of ls) {\n//   console.log(e);\n// }\n\nexport default LinkedList;\n","class AbstractFractal {\n  constructor(width, height, recursionDepth, origin) {\n    if (this.constructor === AbstractFractal) {\n      throw new Error(\"Abstract classes can't be instantiated.\");\n    }\n    this.MAX_DEPTH = 8;\n    this.points = null;\n    this.width = width;\n    this.height = height;\n    this.origin = origin;\n    this.depthToPoints = new Array(10+1);\n    this.recursionDepth = -1;\n    this.setRecursionDepth(recursionDepth);\n  }\n\n  setRecursionDepth(depth) {\n    if(depth > this.MAX_DEPTH) {\n      depth = this.MAX_DEPTH;\n    }\n    this.recursionDepth = depth;\n    this.setPoints();\n  }\n\n  setDimensions(w, h) {\n    this.width = w;\n    this.height = h;\n    this.wipeOutDepthToPointArray();\n    this.setPoints();\n  }\n  \n  setPoints() {\n    if (this.pointsNeedBeSet()) {\n      // console.log('I set '+ this.getTitle() + ' for ' + this.getRecursionDepth());\n      this.depthToPoints[this.getRecursionDepth()] = this.set(\n        this.origin[0], this.origin[1],\n        this.width, this.height);\n    }\n  }\n\n  wipeOutDepthToPointArray() {\n    this.depthToPoints = new Array(10+1);\n  }\n  \n  set(/* x, y, w, h, ls=new LinkedList(), r = 0 */) {\n    throw new Error(\"Method 'set()' must be implemented.\");\n  }\n\n  pointsNeedBeSet() {\n    return !this.depthToPoints[this.getRecursionDepth()];\n  }\n  \n  getTitle() {\n    throw new Error(\"Method 'getTitle()' must be implemented.\");\n  }\n  \n  getReactState() {\n    return {\n      title: this.getTitle(),\n      width: this.getWidth(),\n      height: this.getHeight(),\n      points: this.getPoints(),\n      recursionDepth: this.getRecursionDepth(),\n      maxRecursionDepth: this.MAX_DEPTH,\n    };\n  }\n  \n  getPoints() {\n    return this.depthToPoints[this.getRecursionDepth()];\n  }\n\n  getWidth() {\n    return this.width;\n  }\n  \n  getHeight() {\n    return this.height;\n  }\n\n  getRecursionDepth() {\n    return this.recursionDepth;\n  }\n}\n\nexport default AbstractFractal;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass SierpinskiTri extends AbstractFractal {\n  set(x, y, w, h, ls=new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let vertices = [[x + w / 2, y], [x, y + h], [x + w, y + h]];\n      let p = new Point(x, y, w, h, vertices, this.flipCoin());\n      ls.add(p);\n      return ls;\n    }\n    \n    ls = this.set(  x        , y + h / 2, w / 2, h / 2, ls, ++r);\n    ls = this.set(  x + w / 2, y + h / 2, w / 2, h / 2, ls, r);\n    return this.set(x + w / 4, y        , w / 2, h / 2, ls, r);\n  }\n\n  getTitle() {\n    return 'Sierpinski\\'s Triangle';\n  }\n\n  flipCoin() {\n    return Math.random() >= 0.33;\n  }\n}\n\nexport default SierpinskiTri;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass BoxFractal extends AbstractFractal {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, recursionDepth, origin);\n    this.MAX_DEPTH = 7;\n  }\n  \n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, w, h, null, this.flipCoin());\n      ls.add(p);\n      return ls;\n    }\n\n    ls = this.set(x, y, w / 3, h / 3, ls, ++r);\n    ls = this.set(x + 2 * w / 3, y, w / 3, h / 3, ls, r);\n    ls = this.set(x, y + 2 * h / 3, w / 3, h / 3, ls, r);\n    ls = this.set(x + 2 * w / 3, y + 2 * h / 3, w / 3, h / 3, ls, r);\n    return this.set(x + w / 3, y + h / 3, w / 3, h / 3, ls, r);\n  }\n\n  getTitle() {\n    return 'Box Fractal';\n  }\n\n  flipCoin() {\n    return Math.random() >= 0.33;\n  }\n}\n\nexport default BoxFractal;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass Mondrian extends AbstractFractal {\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, w, h,\n                        null, true, this.palette(), '#30303a', 5);\n      ls.add(p);\n      return ls;\n    }\n    let i = this.rand(x, w)+0.2*w;\n    let j = this.rand(y, h)+0.2*h;\n    ls = this.set(  x    , y    , x + i, y + j, ls, ++r); // upper left rectangle\n    ls = this.set(  x + i, y    , w - i, y + j, ls, r);   // upper right rectangle\n    ls = this.set(  x    , y + j, x + i, h - j, ls, r);   // lower left rectangle\n    return this.set(x + i, y + j, w - i, h - j, ls, r);   // lower right rectangle\n  }\n\n  getTitle() {\n    return 'Piet Mondrian';\n  }\n\n  palette() {\n                 // white      red        yellow     blue       black\n    let palette = ['#FEFFFA', '#F60201', '#FDED01', '#1F7FC9', '#30303a'];\n    return palette[Math.round(this.rand(0, 4))];\n  }\n  \n  rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n}\n\nexport default Mondrian;\n","import * as Fractals from './fractals/FractalIndex.js';\n\nclass Model {\n  constructor(width, height,\n              recursionDepth=-1,\n              origin=[0, 0],\n              name = null) {\n    this.DEFAULT_DEPTH = 4;\n    this.DEFAULT_FRACTAL_NAME = 'SierpinskiTri';\n    \n    if (recursionDepth < 0) {\n      this.setDepthToDefault();\n    } else {\n      this.recursionDepth = recursionDepth;\n    }\n\n    this.width = width;\n    this.height = height;\n    this.origin = origin;\n    this.fractal = null;\n\n    if (!name) {\n      this.setNameAndFractal(this.DEFAULT_FRACTAL_NAME);\n    } else {\n      this.setNameAndFractal(name);\n    }\n    \n    this.options = {};\n    this.setOptions();\n  } // constructor ends here\n\n  setOptions() {\n    for (let name in Fractals) {\n      let currFrac = new Fractals[name](0, 0, 0, [0, 0]);\n      this.options[name] = currFrac.getTitle();\n    }\n  }\n\n  setNameAndFractal(name) {\n    this.name = name;\n    this.fractal = new Fractals[\n      this.name](\n        this.width,\n        this.height,\n        this.recursionDepth,\n        this.origin);\n  }\n  \n  setDepthToDefault() {\n    this.recursionDepth = this.DEFAULT_DEPTH;\n  }\n  \n  setRecursionDepth(depth) {\n    this.recursionDepth = depth;\n    this.getFractal().setRecursionDepth(this.recursionDepth);\n  }\n\n  getReactState() {\n    return this.getFractal().getReactState();\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  getRecursionDepth() {\n    return this.recursionDepth;\n  }\n  \n  getOptions() {\n    return this.options;\n  }\n\n  getFractal() {\n    return this.fractal;\n  }\n\n  setDimensions(w, h) {\n    this.width = w;\n    this.height = h;\n    this.getFractal().setDimensions(this.width, this.height);\n  }\n\n  updateFractal(name, width, height, depth) {\n    this.width  = width  ? width  : this.width;\n    this.height = height ? height : this.height;\n\n    // console.log([name, width, height, depth]);\n    \n    if(name && this.getName() !== name) {\n      this.setDepthToDefault();\n      this.setNameAndFractal(name);\n    } else if (depth && this.getRecursionDepth() !== depth) {\n      this.setRecursionDepth(depth);\n    } else {\n      this.setDimensions(this.width, this.height);\n    }\n    return this.getReactState();\n  }\n}\n\nexport default Model;\n","class Control {\n  constructor(app) {\n    this.app = app;\n  }\n\n  sliderEventHandler = (event) => {\n    let newDepth = event.target.value;\n    let state = this.app.model.updateFractal(null, null, null, newDepth);\n    this.app.setState(state);\n  }\n\n  dropdownEventHandler = (event) => {\n    let newName = event.target.value;\n    let state = this.app.model.updateFractal(newName, null, null, null);\n    this.app.setState(state);\n  }\n\n  onWindowResize = () => {\n    let state = this.app.model.updateFractal(\n    null,this.app.getWinWidth(), this.app.getWinHeight(), null);\n    this.app.setState(state);\n  }\n}\n\nexport default Control;\n","import '../css/Slider.css';\n\nimport React, { Component } from 'react';\n\nclass Slider extends Component {\n  render() {\n    return <input\n             id='slider'\n             type='range'\n             min='0'\n             max={this.props.sliderMaxValue.toString()}\n             autoComplete='off'\n             value={this.props.sliderInitialValue}\n             onChange={this.props.eventHandler}\n           />;\n  }\n}\n\nexport default Slider;\n\n","import '../css/Dropdown.css';\n\nimport React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    let optionsList = Object.entries(this.props.dropdownOptions);\n    this.options = new Array(optionsList.length);\n\n    optionsList.forEach((op, i) => {\n      this.options[i] = <option\n                          key={i}\n                          value={op[0]}>\n                          {op[1]}\n                        </option>;\n    });\n  }\n\n  render() {\n    return <select id='dropdown'\n             onChange={this.props.eventHandler}>\n             {this.options}\n           </select>;\n  }\n}\n\nexport default Dropdown;\n","import '../css/Header.css';\n\nimport Slider from './Slider.js';\nimport Dropdown from './Dropdown.js';\nimport React, { Component } from 'react';\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <h1 id='header'> {\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={\n            'https://duckduckgo.com/?q='\n              + this.props.title\n          }>\n          {this.props.title}\n        </a>\n      }\n        <Slider\n          eventHandler={this.props.sliderEventHandler}\n          sliderInitialValue={this.props.sliderInitialValue}\n          sliderMaxValue={this.props.sliderMaxValue}\n        />\n        <Dropdown\n          eventHandler={this.props.dropdownEventHandler}\n          dropdownOptions={this.props.dropdownOptions}\n        />\n      </h1>\n    );\n  }\n}\nexport default Header;\n","import '../css/FractalPane.css';\n\nimport React, { Component } from 'react';\n\nclass FractalPane extends Component {\n\n  plotPoints(toClearPreviousPlot=false) {\n    let canvas = this.refs.canvas;\n    const context = canvas.getContext('2d');\n    if (toClearPreviousPlot) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n    let points = this.props.fractal.points;\n    for (const p of points) {\n      this.drawPoint(context, p);\n    }\n  }\n  \n  componentDidMount() {\n    this.plotPoints();\n  }\n\n  componentDidUpdate() {\n    this.plotPoints(true);\n  }\n\n  drawPoint(context, point) {\n    context.fillStyle = point.getFillStyle();\n    context.strokeStyle = point.getStrokeStyle();\n    context.lineWidth = point.getLineWidth();\n    context.beginPath();\n    \n    let vert = point.getVertices();\n    vert.push(vert[0]);\n    context.moveTo(vert[0][0], vert[0][1]);\n\n    for (let i = 1; i < vert.length; i++) {\n      context.lineTo(vert[i][0], vert[i][1]);\n    }\n\n    context.closePath();\n    context.stroke();\n    \n    if (point.fill()) {\n      context.fill();\n    }\n  }\n\n  render() {\n    let width, height;\n    width = this.props.fractal.width;\n    height = this.props.fractal.height;\n    return <canvas\n             id='fractal_pane'\n             ref=\"canvas\"\n             width={width}\n             height={height}\n           />;\n  }\n}\n\nexport default FractalPane;\n","import React, { Component } from 'react';\nimport Model from '../model/Model.js';\nimport Control from '../control/Control.js';\nimport { FractalPane, Header } from './components/ComponentIndex.js';\nimport './css/App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.MARGIN = 0;\n    this.control = new Control(this);\n    this.model = new Model(this.getWinWidth(), this.getWinHeight());\n    this.state = this.model.getReactState();\n    window.addEventListener(\"resize\", this.control.onWindowResize);\n  }\n\n  getWinWidth() {\n    return window.innerWidth;\n  }\n\n  getWinHeight() {\n    return window.innerHeight;\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          sliderEventHandler={this.control.sliderEventHandler}\n          sliderInitialValue={this.state.recursionDepth}\n          sliderMaxValue={this.state.maxRecursionDepth}\n          dropdownEventHandler={this.control.dropdownEventHandler}\n          dropdownOptions={this.model.getOptions()}\n          title={this.state.title}\n        />\n        <FractalPane fractal={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './view/css/index.css';\nimport App from './view/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}