{"version":3,"sources":["model/data_structures/LinkedList.js","model/data_structures/Vector.js","model/data_structures/Point.js","model/figures/AbstractFigure.js","model/figures/HeighwayDragon.js","model/figures/ParametricTornado.js","model/figures/ParametricFish.js","model/figures/TreeBranch.js","model/figures/KochSnowflake.js","model/figures/SierpinskiTri.js","model/figures/QuiltFractal.js","model/figures/BoxFractal.js","model/figures/Mondrian.js","model/Model.js","control/Control.js","view/components/Slider.js","view/components/Dropdown.js","view/components/Header.js","view/components/FigurePane.js","view/App.js","index.js"],"names":["ListNode","value","next","this","listNode","LinkedList","length","head","current","isEmpty","getValue","begin","end","ret","i","nodeValue","add","toAdd","setNext","arr","Array","Symbol","iterator","currentNode","getNext","Vector","start","l","radians","Math","cos","sin","Point","x","y","width","height","vertices","toFill","fillStyle","strokeStyle","lineWidth","w","h","square","getRandomColor","a","b","getVertices","random","toString","substr","rad","origin","X","Y","T","z","AbstractFigure","maxDepth","toCenterFractal","constructor","Error","points","depthToPoints","recursionDepth","setDepthToDefault","setRecursionDepth","round","depth","setPoints","wipeOutDepthToPointArray","pointsNeedBeSet","getRecursionDepth","set","centerFractal","minX","Number","POSITIVE_INFINITY","minY","maxX","NEGATIVE_INFINITY","maxY","getPoints","p","vertex","translate","title","getTitle","getWidth","getHeight","maxRecursionDepth","lower","upper","num_points","step","HeighwayDragon","ls","min","seed","dragon","PI","v","recurLeft","color","clockwise","cords","t1","len","t2","pow","DEPTH","COLOUR_DICT","0","0.333","0.666","ParametricFish","c","linspace","parametricCurve","rotate","t","scale","C","0.5","1","1.5","colour","angle","itr","MAX_ANGLE","TreeBranch","branch","sqrt","dir","palette","new_l","rand","new_start","new_radians","radius","max","KochSnowflake","fractal","t3","t4","SierpinskiTri","r","QuiltFractal","markPoints","rotatePoints","l_new","x_new","y_new","cord","dist","starting_block","indices","subsetIndices","pointsSliced","slice","O","tail","rotateAll","rotationOrigin","position","cordinate","BoxFractal","Mondrian","j","Model","DEFAULT_MAX_DEPTH","options","setOptions","name","Figures","currFrac","setNameAndFigure","Object","keys","getFigure","getReactState","setDimensions","getName","Control","app","sliderEventHandler","event","newDepth","target","state","model","updateFigure","setState","dropdownEventHandler","newName","onWindowResize","getWinWidth","getWinHeight","Slider","id","type","props","sliderMaxValue","autoComplete","sliderInitialValue","onChange","eventHandler","Component","Dropdown","optionsList","entries","dropdownOptions","forEach","op","key","Header","rel","href","FigurePane","toClearPreviousPlot","canvas","refs","context","getContext","clearRect","drawPoint","plotPoints","point","getFillStyle","getStrokeStyle","getLineWidth","beginPath","vert","moveTo","lineTo","closePath","stroke","fill","ref","App","MARGIN","control","window","addEventListener","innerWidth","innerHeight","className","getOptions","ReactDOM","render","document","getElementById"],"mappings":"syBAAMA,E,WACJ,WAAYC,EAAOC,GAAO,oBACxBC,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,E,oDAENE,GACND,KAAKD,KAAOE,I,+BAELH,GACPE,KAAKF,MAAQA,I,gCAGb,OAAOE,KAAKD,O,iCAGZ,OAAOC,KAAKF,U,KAyFDI,E,WApFb,aAAe,oBACbF,KAAKG,OAAS,EACdH,KAAKI,KAAO,KACZJ,KAAKK,QAAU,K,sDAIf,OAAuB,IAAhBL,KAAKG,S,6BAIZ,OAAIH,KAAKM,UACA,KACFN,KAAKK,QAAQE,a,4BAGhBC,GAAoB,IAAbC,EAAY,uDAAN,KACZA,IACHA,EAAMT,KAAKG,QACb,IAHuB,EAGnBO,EAAM,IAAIR,EACVS,EAAI,EAJe,cAKCX,MALD,IAKvB,2BAA8B,CAAC,IAApBY,EAAmB,QACxBJ,GAASG,GAAKA,EAAIF,GACpBC,EAAIG,IAAID,GACVD,KARqB,8BAUvB,OAAOD,I,0BAGLZ,GACF,GAAIE,KAAKM,UACPN,KAAKI,KAAO,IAAIP,EAASC,EAAO,MAChCE,KAAKK,QAAUL,KAAKI,SACf,CACL,IAAIU,EAAQ,IAAIjB,EAASC,EAAO,MAChCE,KAAKK,QAAQU,QAAQD,GACrBd,KAAKK,QAAUS,EAEjB,QAASd,KAAKG,S,gCAId,IADQ,EACJQ,EAAI,EACJK,EAAM,IAAIC,MAAMjB,KAAKG,QAFjB,cAGgBH,MAHhB,IAGR,2BAA8B,CAAC,IAApBY,EAAmB,QAC5BI,EAAIL,KAAOC,GAJL,8BAMR,OAAOI,I,KAGPE,OAAOC,S,0GACJnB,KAAKM,U,iDAGJc,EAAcpB,KAAKI,K,WAChBgB,EAAYC,U,iBAGjB,OAFIX,EAAMU,EAAYb,WACtBa,EAAcA,EAAYC,U,SACpBX,E,8BAER,O,UAAMU,EAAYb,W,wDClEPe,E,WAbb,WAAYC,EAAOC,EAAGC,GAAU,oBAC9BzB,KAAKuB,MAAQA,EACbvB,KAAKwB,EAAIA,EACTxB,KAAKyB,QAAUA,EACfzB,KAAKS,IAAM,CAACT,KAAKuB,MAAM,GAAKC,EAAIE,KAAKC,IAAIF,GACzCzB,KAAKuB,MAAM,GAAKC,EAAIE,KAAKE,IAAIH,I,oDAI7B,MAAO,CAACzB,KAAKuB,MAAOvB,KAAKS,S,KCVvBkB,EAAMD,KAAKC,IACXC,EAAMF,KAAKE,IA+FFC,E,WA5Fb,WAAYC,EAAGC,EAAGC,EAAOC,GAEa,IAFLC,EAEI,uDAFO,KAC1CC,IACmC,yDADpBC,EACoB,uDADR,KAC3BC,EAAmC,uDAArB,KAAMC,EAAe,uDAAH,EAAG,oBACnCtC,KAAK8B,EAAIA,EACT9B,KAAK+B,EAAIA,EACT/B,KAAKuC,EAAIP,EACThC,KAAKwC,EAAIP,EACTjC,KAAKmC,OAASA,EACdnC,KAAKsC,UAAYA,EACjBtC,KAAKkC,SAAWA,GAAsBlC,KAAKyC,SAC3CzC,KAAKoC,UAAYA,GAAwBpC,KAAK0C,iBAC9C1C,KAAKqC,YAAcA,GAA4BrC,KAAKoC,U,qDAIpD,MAAO,CACL,CAACpC,KAAK8B,EAAG9B,KAAK+B,GACd,CAAC/B,KAAK8B,EAAI9B,KAAKuC,EAAGvC,KAAK+B,GACvB,CAAC/B,KAAK8B,EAAI9B,KAAKuC,EAAGvC,KAAK+B,EAAI/B,KAAKwC,GAChC,CAACxC,KAAK8B,EAAG9B,KAAK+B,EAAI/B,KAAKwC,M,kCAIF,IAAD,EAAdG,EAAc,uDAAV,EAAGC,EAAO,uDAAH,EAAG,cACD5C,KAAK6C,eADJ,IACtB,2BAAyC,CAAC,IAAjCX,EAAgC,QACvCA,EAAS,IAAMS,EACfT,EAAS,IAAMU,GAHK,iC,uCAStB,MAAO,KADI,SAA4B,SAAhBlB,KAAKoB,UACXC,SAAS,IAAIC,OAAO,EAAG,K,oCAIxC,OAAOhD,KAAKkC,W,6BAIZ,OAAOlC,KAAKmC,S,qCAIZ,OAAOnC,KAAKoC,Y,uCAIZ,OAAOpC,KAAKqC,c,qCAIZ,OAAOrC,KAAKsC,Y,mCAGDF,GACXpC,KAAKoC,UAAYA,I,qCAGJC,GACbrC,KAAKqC,YAAcA,I,6BAGdY,GAAqB,IAAhBC,EAAe,uDAAN,KACnB,GAAY,IAARD,EAAJ,CAGA,IAAIE,EAAGC,EACQ,OAAXF,GACFC,EAAInD,KAAK8B,EAAI9B,KAAKuC,EAAI,EACtBa,EAAIpD,KAAK+B,EAAI/B,KAAKwC,EAAI,IAEtBW,EAAID,EAAO,GACXE,EAAIF,EAAO,IAMb,IAHA,IAAIG,EAAI,CAAC,CAAC1B,EAAIsB,GAAMrB,EAAIqB,GAAME,GAAKA,EAAIxB,EAAIsB,GAAOG,EAAIxB,EAAIqB,KAC1D,EAAErB,EAAIqB,GAAMtB,EAAIsB,GAAMG,GAAKA,EAAIzB,EAAIsB,GAAOE,EAAIvB,EAAIqB,KAClD,CAAC,EAAG,EAAG,IACEtC,EAAI,EAAGA,EAAIX,KAAKkC,SAAS/B,OAAQQ,IAAK,CAC7C,IAAImB,EAAI9B,KAAKkC,SAASvB,GAAG,GACrBoB,EAAI/B,KAAKkC,SAASvB,GAAG,GACrB2C,EAAI,EACRtD,KAAKkC,SAASvB,GAAK,CAAEmB,EAAIuB,EAAE,GAAG,GAAOtB,EAAIsB,EAAE,GAAG,GAAOC,EAAID,EAAE,GAAG,GAC7DvB,EAAIuB,EAAE,GAAG,GAAOtB,EAAIsB,EAAE,GAAG,GAAOC,EAAID,EAAE,GAAG,U,KC0CjCE,E,WA7Hb,WAAYvB,EAAOC,EAAQuB,EAAUN,GAAkC,IAA1BO,EAAyB,wDACpE,GADoE,oBAChEzD,KAAK0D,cAAgBH,EACvB,MAAM,IAAII,MAAM,2CAElB3D,KAAKwD,SAAWA,EAChBxD,KAAK4D,OAAS,KACd5D,KAAKgC,MAAQA,EACbhC,KAAKiC,OAASA,EACdjC,KAAKkD,OAASA,EACdlD,KAAKyD,gBAAkBA,EACvBzD,KAAK6D,cAAgB,IAAI5C,MAAM,IAC/BjB,KAAK8D,gBAAkB,EACvB9D,KAAK+D,oB,gEAIL/D,KAAKgE,kBAAkBtC,KAAKuC,MAAMjE,KAAKwD,SAAW,M,wCAGlCU,GAChBlE,KAAK8D,eAAiBI,EACtBlE,KAAKmE,c,oCAGO5B,EAAGC,GACfxC,KAAKgC,MAAQO,EACbvC,KAAKiC,OAASO,EACdxC,KAAKoE,2BACLpE,KAAKmE,c,kCAIDnE,KAAKqE,oBAEPrE,KAAK6D,cAAc7D,KAAKsE,qBAAuBtE,KAAKuE,IAClDvE,KAAKkD,OAAO,GAAIlD,KAAKkD,OAAO,GAC5BlD,KAAKgC,MAAOhC,KAAKiC,QACfjC,KAAKyD,iBACPzD,KAAKwE,mB,iDAMTxE,KAAK6D,cAAgB,IAAI5C,MAAM,M,4BAI/B,MAAM,IAAI0C,MAAM,yC,sCAIhB,IADc,EACVc,EAAOC,OAAOC,kBAChBC,EAAOF,OAAOC,kBACdE,EAAOH,OAAOI,kBACdC,EAAOL,OAAOI,kBAJF,cAKA9E,KAAKgF,aALL,IAKd,2BAAgC,CAAC,IAAD,EAAvBC,EAAuB,sBACXA,EAAEpC,eADS,IAC9B,2BAAoC,CAAC,IAA5BqC,EAA2B,QAClCT,EAAOS,EAAO,GAAKT,EAAOS,EAAO,GAAKT,EACtCG,EAAOM,EAAO,GAAKN,EAAOM,EAAO,GAAKN,EACtCC,EAAOK,EAAO,GAAKL,EAAOK,EAAO,GAAKL,EACtCE,EAAOG,EAAO,GAAKH,EAAOG,EAAO,GAAKH,GALV,gCALlB,8BAad,IAbc,EAiBVpC,EAJO3C,KAAKgC,MAAQ,GAEZ6C,EAAOJ,GAAQ,EAELA,EACpB7B,EAJO5C,KAAKiC,OAAS,GAEb8C,EAAOH,GAAQ,EAELA,EAlBN,cA0BA5E,KAAKgF,aA1BL,IA0Bd,2BAAgC,SAC5BG,UAAUxC,EAAGC,IA3BH,iC,wCAgCd,OAAQ5C,KAAK6D,cAAc7D,KAAKsE,uB,iCAIhC,MAAM,IAAIX,MAAM,8C,sCAIhB,MAAO,CACLyB,MAAOpF,KAAKqF,WACZrD,MAAOhC,KAAKsF,WACZrD,OAAQjC,KAAKuF,YACb3B,OAAQ5D,KAAKgF,YACblB,eAAgB9D,KAAKsE,oBACrBkB,kBAAmBxF,KAAKwD,Y,kCAK1B,OAAOxD,KAAK6D,cAAc7D,KAAKsE,uB,iCAI/B,OAAOtE,KAAKgC,Q,kCAIZ,OAAOhC,KAAKiC,S,0CAIZ,OAAOjC,KAAK8D,iB,2CAGJ2B,EAAOC,G,uFAAOC,E,+BAAa,GAC/BC,GAAQF,EAAQD,IAAUE,EAAa,GAClChF,EAAI,E,YAAGA,EAAIgF,G,gBAClB,O,SAAOF,EAAS9E,EAAIiF,E,OADUjF,I,iEC9ErBkF,E,kDAxCb,WAAY7D,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ,GAAIiB,GAAQ,G,gDAG/BpB,EAAGC,EAAGQ,EAAGC,GAAkC,IAA/BsD,EAA8B,uDAAzB,IAAI5F,EACnBsB,EARM,IAQME,KAAKqE,IAAIxD,EAAGC,GACxBwD,EAAO,IAAI1E,EAAO,CAACQ,EAAGC,GAAIP,EAAG,GAOjC,OANAsE,EAAK9F,KAAKiG,OAAOD,EAAMF,EAAI9F,KAAK8D,eAAgB,OAChDkC,EAAO,IAAI1E,EAAO,CAACQ,EAAGC,GAAIP,EAAGE,KAAKwE,GAAK,GACvCJ,EAAK9F,KAAKiG,OAAOD,EAAMF,EAAI9F,KAAK8D,eAAgB,SAChDkC,EAAO,IAAI1E,EAAO,CAACQ,EAAGC,GAAIP,EAAGE,KAAKwE,IAClCJ,EAAK9F,KAAKiG,OAAOD,EAAMF,EAAI9F,KAAK8D,eAAgB,QAChDkC,EAAO,IAAI1E,EAAO,CAACQ,EAAGC,GAAIP,EAAG,IAAME,KAAKwE,IACjClG,KAAKiG,OAAOD,EAAMF,EAAI9F,KAAK8D,eAAgB,Y,6BAG7CqC,EAAGL,EAAIM,EAAWC,GAA0B,IAAnBC,IAAkB,yDAChD,GAAkB,IAAdF,EAAiB,CACnB,IAAIlE,EAAWiE,EAAEI,QAEjB,OADAT,EAAGjF,IAAI,IAAIgB,EAAMK,EAAS,GAAG,GAAIA,EAAS,GAAG,GAAI,EAAG,EAAGA,GAAU,EAAMmE,IAChEP,EAEP,IAAIrE,EAAU6E,EAAY5E,KAAKwE,GAAK,GAAKxE,KAAKwE,GAAK,EAC/CM,EAAK,IAAIlF,EAAJ,YAAe6E,EAAE5E,OAAQvB,KAAKyG,IAAIN,EAAE3E,GAAI2E,EAAE1E,QAAUA,GAC7DqE,EAAK9F,KAAKiG,OAAOO,EAAIV,EAAIM,EAAY,EAAGC,GAAO,GAC/C5E,EAAU6E,GAAa5E,KAAKwE,GAAK,EAAIxE,KAAKwE,GAAK,EAC/C,IAAIQ,EAAK,IAAIpF,EAAJ,YAAekF,EAAG/F,KAAMT,KAAKyG,IAAIN,EAAE3E,GAAI2E,EAAE1E,QAAUA,GAC5D,OAAOzB,KAAKiG,OAAOS,EAAIZ,EAAIM,EAAY,EAAGC,GAAO,K,0BAIjD7E,GACF,OAAO,KAAP,IAAQ,SAAAA,EAAK,GAAI,EAAO,M,iCAIxB,MAAO,kC,GArCkB+B,G,QCAvB3B,EAAMF,KAAKE,IACX+E,EAAMjF,KAAKiF,IACXT,EAAKxE,KAAKwE,GACVU,EAAQD,EAAI,GAAI,GAChBE,EAAc,CAClBC,EAAG,UACHC,KAAO,UACPC,KAAO,WAiCMC,E,kDA7Bb,WAAYjF,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ2E,EAAO1D,GAAQ,G,gDAGlCpB,EAAGC,EAAGQ,EAAGC,GAAkC,IACzCyC,EAAGtE,EAAGuG,EADIpB,EAA8B,uDAAzB,IAAI5F,EAEjBmD,EAAIrD,KAAKmH,UAAU,GAAI,GAAInH,KAAK8D,gBACtC,IAAKnD,EAAI,EAAGA,EAAIX,KAAK8D,eAAgBnD,IAAK,CAAC,IAAD,EAC/BX,KAAKoH,gBAAgB/D,EAAEtD,OAAOD,MAAO4B,KAAKqE,IAAIxD,EAAGC,IADlB,mBACvCV,EADuC,KACpCC,EADoC,KAExC,cAAU,CAAC,EAAG,KAAO,MAArB,eAAKmF,EAAwB,MAC3BjC,EAAI,IAAIpD,EAAMC,EAAGC,EAAG,EAAG,EAAG,MAAM,EAAO8E,EAAYK,KACjDG,OAAOH,EAAIhB,EAAI,CAAC,EAAG,IACrBJ,EAAGjF,IAAIoE,GAGX,OAAOa,I,sCAGOwB,EAAGC,GACjB,IAAMC,EAAI9F,KAAKuC,MAAM,IAAKsD,GAC1B,MAAO,CAACC,GAAK5F,EAAI,KAAO0F,GAAKX,EAAK,EAAIA,EAAI/E,EAAI,KAAK0F,GAAI,GAAI,IACnDE,EAAIb,EAAI/E,EAAI,KAAO0F,GAAI,M,iCAI/B,MAAO,yB,GA1BkB/D,GCXvB5B,EAAMD,KAAKC,IACXC,EAAMF,KAAKE,IACX+E,EAAMjF,KAAKiF,IACXT,EAAKxE,KAAKwE,GACVU,EAAQD,EAAI,GAAI,GAChBE,EAAc,CAClBC,EAAG,UACHW,GAAK,UACLC,EAAG,UACHC,IAAK,WAwCQV,E,kDAnCb,WAAYjF,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ2E,EAAO1D,GAAQ,G,gDAGlCpB,EAAGC,EAAGQ,EAAGC,GAAkC,IACzCyC,EAAGtE,EAAGuG,EADIpB,EAA8B,uDAAzB,IAAI5F,EAEjBmD,EAAIrD,KAAKmH,UAAU,EAAIjB,EAAI,EAAIA,EAAIU,GACzC,IAAKjG,EAAI,EAAGA,EAAIX,KAAK8D,eAAgBnD,IAAK,CAAC,IAAD,EAC/BX,KAAKoH,gBAAgB/D,EAAEtD,OAAOD,MAAO4B,KAAKqE,IAAIxD,EAAGC,IADlB,mBACvCV,EADuC,KACpCC,EADoC,KAExC,cAAU,CAAC,EAAG,GAAK,EAAG,KAAtB,eAAKmF,EAAuB,MAC1BjC,EAAI,IAAIpD,EAAMC,EAAGC,EAAG,EAAG,EAAG,MAAM,EAAO/B,KAAK4H,OAAOV,EAAGvG,KACpD0G,OAAOH,EAAIhB,EAAI,CAAC,EAAG,IACrBJ,EAAGjF,IAAIoE,GAGX,OAAOa,I,sCAGOwB,EAAGC,GACjB,IAAMC,EAAI9F,KAAKuC,MAAM,IAAOsD,GAC5B,MAAO,CAACC,EAAIb,EAAI/E,GAAK,EAAI0F,GAAI,GAAKX,EAAI,EAAGhF,EAAIA,EAAI,MAAa2F,KAC9DE,EAAI5F,EAAIA,GAAK,EAAI0F,IAAMX,EAAIhF,EAAI,MAAa2F,GAAI,M,6BAG3CO,EAAOC,GACZ,IAAInF,EAAIjB,KAAKuC,MAAO6D,EAAM,GAAK,GAAM,KAAK/E,SAAS,IAEnD,OADAJ,EAAiB,IAAbA,EAAExC,OAAe,IAAMwC,EAAIA,EACxBkE,EAAYgB,GAASlF,I,iCAI5B,MAAO,yB,GAhCkBY,GCXvBwE,EAAYrG,KAAKwE,GAAK,EAqDb8B,E,kDAhDb,WAAYhG,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ,GAAIiB,G,gDAGvBpB,EAAGC,EAAGQ,EAAGC,GAAkC,IAA/BsD,EAA8B,uDAAzB,IAAI5F,EAGvB,OAFAF,KAAKiI,OAAO,CAACnG,EAAGC,GAAI,GAAOL,KAAKwG,KAAK3F,EAAIA,EAAIC,EAAIA,GAC/Cd,KAAKwE,GAAK,EAAGlG,KAAK8D,eAAgBgC,GAC7BA,I,6BAGFvE,EAAOC,EAAGC,EAAS2E,EAAWN,GACnC,GAAIM,EAAY,EAAG,CACjB,IAAI+B,EAAMzG,KAAKoB,SAAW,GAAM,GAAK,EACjCZ,EAAW,CAACX,EAAOvB,KAAKS,IAAIc,EAAOC,EAAGC,IACtCwD,EAAI,IAAIpD,EAAMN,EAAM,GAAIA,EAAM,GAAI,EAAG,EAAGW,GAAU,EAAMlC,KAAKoI,WACjEtC,EAAGjF,IAAIoE,GACP,IAAK,IAAItE,EAAI,EAAGA,EAvBL,EAuBmBA,IAAK,CACjC,IAAI0H,EAAQrI,KAAKsI,KArBN,GAqBW9G,EApBX,GAoB2BA,GAClC+G,EAAYvI,KAAKS,IAAIc,EAAO8G,EAAO5G,GACnC+G,EAAc/G,EAAU0G,EAAMnI,KAAKsI,KAzB7B,EAyB6CP,GACvDI,IAAQ,EACRnI,KAAKiI,OAAOM,EAAWF,EAAOG,EAAapC,EAAY,EAAGN,O,0BAK5DvE,EAAOkH,EAAQhH,GACjB,MAAO,CAACF,EAAM,GAAKkH,EAAS/G,KAAKC,IAAIF,GACrCF,EAAM,GAAKkH,EAAS/G,KAAKE,IAAIH,M,gCAI7B,IAAI2G,EAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UACzD,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WAC9C,OAAOA,EAAQ1G,KAAKuC,MAAMjE,KAAKsI,KAAK,EAAGF,EAAQjI,OAAS,O,2BAGrD4F,EAAK2C,GACR,OAAOhH,KAAKoB,UAAY4F,EAAM3C,GAAOA,I,iCAIrC,MAAO,0B,GA7CcxC,GCmCVoF,E,kDAxCb,WAAY3G,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ,EAAGiB,GAAQ,G,gDAG9BpB,EAAGC,EAAGQ,EAAGC,GAAkC,IAA/BsD,EAA8B,uDAAzB,IAAI5F,EACnBsB,EAAIE,KAAKqE,IAAIxD,EAAGC,GAEhBwD,EAAO,IAAI1E,EAAO,CAACQ,EAAIN,EAAI,EAAGO,EAAIP,EAAI,IAAKA,GAAK,EAAI,GAAIE,KAAKwE,IAAM,EAAI,IAQ3E,OAPAJ,EAAK9F,KAAK4I,QAAQ5C,EAAMF,EAAI9F,KAAK8D,gBAEjCkC,EAAO,IAAI1E,EAAO,CAACQ,EAAK,KAADN,EAAeO,EAAIP,GAAK,EAAI,IAAKA,GAAK,EAAI,GAAIE,KAAKwE,KAAO,EAAI,IACrFJ,EAAK9F,KAAK4I,QAAQ5C,EAAMF,EAAI9F,KAAK8D,gBAEjCkC,EAAO,IAAI1E,EAAO,CAACQ,EAAIN,GAAK,EAAI,IAAKO,EAAIP,GAAK,EAAI,IAAKA,GAAK,EAAI,GAAI,GACpEsE,EAAK9F,KAAK4I,QAAQ5C,EAAMF,EAAI9F,KAAK8D,kB,8BAI3BqC,EAAGL,EAAIM,GACb,GAAkB,IAAdA,EAAiB,CACnB,IAAIlE,EAAWiE,EAAEI,QAEjB,OADAT,EAAGjF,IAAI,IAAIgB,EAAMK,EAAS,GAAG,GAAIA,EAAS,GAAG,GAAI,EAAG,EAAGA,GAAU,EAAM,UAAW,KAAM,IACjF4D,EAEP,IAAIU,EAAK,IAAIlF,EAAJ,YAAe6E,EAAE5E,OAAQ4E,EAAE3E,EAAI,EAAG2E,EAAE1E,SACzCiF,EAAK,IAAIpF,EAAJ,YAAekF,EAAG/F,KAAM0F,EAAE3E,EAAI,EAAG2E,EAAE1E,QAAUC,KAAKwE,GAAK,GAC5D2C,EAAK,IAAIvH,EAAJ,YAAeoF,EAAGjG,KAAM0F,EAAE3E,EAAI,EAAG2E,EAAE1E,QAAUC,KAAKwE,GAAK,GAC5D4C,EAAK,IAAIxH,EAAJ,YAAeuH,EAAGpI,KAAM0F,EAAE3E,EAAI,EAAG2E,EAAE1E,SAI5C,OAHAqE,EAAK9F,KAAK4I,QAAQpC,EAAIV,EAAIM,EAAY,GACtCN,EAAK9F,KAAK4I,QAAQlC,EAAIZ,EAAIM,EAAY,GACtCN,EAAK9F,KAAK4I,QAAQC,EAAI/C,EAAIM,EAAY,GAC/BpG,KAAK4I,QAAQE,EAAIhD,EAAIM,EAAY,K,iCAK1C,MAAO,qB,GArCiB7C,GCmBbwF,E,kKAlBTjH,EAAGC,EAAGQ,EAAGC,GAAgC,IAA7BsD,EAA4B,uDAAzB,IAAI5F,EAAc8I,EAAO,uDAAH,EACvC,GAAIA,GAAKhJ,KAAK8D,eAAgB,CAC5B,IAAI5B,EAAW,CAAC,CAACJ,EAAIS,EAAI,EAAGR,GAAI,CAACD,EAAGC,EAAIS,GAAI,CAACV,EAAIS,EAAGR,EAAIS,IACpDyC,EAAI,IAAIpD,EAAMC,EAAGC,EAAGQ,EAAGC,EAAGN,GAE9B,OADA4D,EAAGjF,IAAIoE,GACAa,EAKT,OAFAA,EAAK9F,KAAKuE,IAAMzC,EAAWC,EAAIS,EAAI,EAAGD,EAAI,EAAGC,EAAI,EAAGsD,IAAMkD,GAC1DlD,EAAK9F,KAAKuE,IAAMzC,EAAIS,EAAI,EAAGR,EAAIS,EAAI,EAAGD,EAAI,EAAGC,EAAI,EAAGsD,EAAIkD,GACjDhJ,KAAKuE,IAAIzC,EAAIS,EAAI,EAAGR,EAAWQ,EAAI,EAAGC,EAAI,EAAGsD,EAAIkD,K,iCAIxD,MAAO,4B,GAfiBzF,GCgFb0F,E,kDAzEb,WAAYjH,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ,EAAGiB,GAAQ,G,gDAG9BpB,EAAGC,EAAGQ,EAAGC,GACX,IAAIhB,EAAIE,KAAKqE,IAAIxD,EAAGC,GAChBoB,EAAS5D,KAAKkJ,WAAWpH,EAAGC,EAAGP,GAKnC,OAJAxB,KAAKmJ,aAAavF,EAAQ,EAAG5D,KAAKsE,qBAClCtE,KAAKmJ,aAAavF,EAAQ,EAAG5D,KAAKsE,qBAClCtE,KAAKmJ,aAAavF,EAAQ,EAAG5D,KAAKsE,qBAClCtE,KAAKmJ,aAAavF,EAAQ,EAAG5D,KAAKsE,qBAC3BtE,KAAKmJ,aAAavF,EAAQ,EAAG5D,KAAKsE,uB,iCAGhCxC,EAAGC,EAAGP,GAAkC,IAA/BsE,EAA8B,uDAAzB,IAAI5F,EAAc8I,EAAO,uDAAH,EAC7C,GAAIA,GAAKhJ,KAAK8D,eAAgB,CAC5B,IAAImB,EAAI,IAAIpD,EAAMC,EAAGC,EAAGP,EAAGA,EAAG,MAAM,EAAO,WAE3C,OADAsE,EAAGjF,IAAIoE,GACAa,EAGT,IAAIsD,EAAQ,IAAO5H,EACf6H,EAAQvH,EAAI,IAAON,EACnB8H,EAAQvH,EAAI,IAAOP,EAMvB,OAJAsE,EAAK9F,KAAKkJ,WAAWpH,EAAOC,EAAOqH,EAAOtD,IAAMkD,GAChDlD,EAAK9F,KAAKkJ,WAAWG,EAAOtH,EAAOqH,EAAOtD,EAAMkD,GAChDlD,EAAK9F,KAAKkJ,WAAWG,EAAOC,EAAOF,EAAOtD,EAAMkD,GAChDlD,EAAK9F,KAAKkJ,WAAWpH,EAAOwH,EAAOF,EAAOtD,EAAMkD,GACzChJ,KAAKkJ,WAAWlJ,KAAKuJ,KAAKzH,EAAGN,GAAIxB,KAAKuJ,KAAKxH,EAAGP,GAC9BxB,KAAKwJ,KAAKhI,GAAIsE,EAAIkD,K,mCAG9BpF,EAAQ6F,EAAgBT,GACnC,GAAU,IAANA,EACF,OAAOpF,EAET,IAAI8F,EAAU1J,KAAK2J,cAAcF,EAAgBT,GAC7CY,EAAehG,EAAOiG,MAAMH,EAAQ,GAAIA,EAAQ,IAChDI,EAAIF,EAAaG,OAMrB,OALAD,EAAI,CAACA,EAAEhI,EAAIgI,EAAEvH,EAAE,EAAGuH,EAAE/H,EAAI+H,EAAEtH,EAAE,GACL,IAAnBiH,GACFzJ,KAAKgK,UAAUJ,EAAcE,GAE/B9J,KAAKmJ,aAAaS,EAAc,IAAKZ,GAC9BpF,I,gCAGCA,EAAQqG,GAAiB,IAAD,gBAChBrG,GADgB,IAChC,2BAAwB,SACpByD,OAAO3F,KAAKwE,GAAG,EAAG+D,IAFU,iC,oCAMpBC,EAAUlB,GACtB,GAAIkB,EAAW,GAAKA,EAAW,EAC7B,MAAM,IAAIvG,MAAM,8CAAgDuG,GAClE,MAAO,CAAEA,EAAWxI,KAAKiF,IAAI,EAAGqC,EAAI,IAAMkB,EAAS,GAAIxI,KAAKiF,IAAI,EAAGqC,EAAI,M,2BAGpExH,GACH,OAAOE,KAAKwG,KAAK,GAAK1G,EAAI,I,2BAGvB2I,EAAW3I,GACd,OAAO2I,EAAa3I,EAAI,EAAMxB,KAAKwJ,KAAKhI,GAAK,I,iCAI7C,MAAO,yB,GAtEgB+B,GCkBZ6G,E,kDAvBb,WAAYpI,EAAOC,EAAQ6B,EAAgBZ,GAAS,uCAC5ClB,EAAOC,EAAQ,EAAGiB,G,gDAGtBpB,EAAGC,EAAGQ,EAAGC,GAAkC,IAA/BsD,EAA8B,uDAAzB,IAAI5F,EAAc8I,EAAO,uDAAH,EACzC,GAAIA,GAAKhJ,KAAK8D,eAAgB,CAC5B,IAAImB,EAAI,IAAIpD,EAAMC,EAAGC,EAAGQ,EAAGC,GAE3B,OADAsD,EAAGjF,IAAIoE,GACAa,EAOT,OAJAA,EAAK9F,KAAKuE,IAAIzC,EAAGC,EAAGQ,EAAI,EAAGC,EAAI,EAAGsD,IAAMkD,GACxClD,EAAK9F,KAAKuE,IAAIzC,EAAI,EAAIS,EAAI,EAAGR,EAAGQ,EAAI,EAAGC,EAAI,EAAGsD,EAAIkD,GAClDlD,EAAK9F,KAAKuE,IAAIzC,EAAGC,EAAI,EAAIS,EAAI,EAAGD,EAAI,EAAGC,EAAI,EAAGsD,EAAIkD,GAClDlD,EAAK9F,KAAKuE,IAAIzC,EAAI,EAAIS,EAAI,EAAGR,EAAI,EAAIS,EAAI,EAAGD,EAAI,EAAGC,EAAI,EAAGsD,EAAIkD,GACvDhJ,KAAKuE,IAAIzC,EAAIS,EAAI,EAAGR,EAAIS,EAAI,EAAGD,EAAI,EAAGC,EAAI,EAAGsD,EAAIkD,K,iCAIxD,MAAO,kB,GApBczF,GC+BV8G,E,kKA9BTvI,EAAGC,EAAGQ,EAAGC,GAAkC,IAA/BsD,EAA8B,uDAAzB,IAAI5F,EAAc8I,EAAO,uDAAH,EACzC,GAAIA,GAAKhJ,KAAK8D,eAAgB,CAC5B,IAAImB,EAAI,IAAIpD,EAAMC,EAAGC,EAAGQ,EAAGC,EACT,MAAM,EAAMxC,KAAKoI,UAAW,UAAW,GAEzD,OADAtC,EAAGjF,IAAIoE,GACAa,EAET,IAAInF,EAAIX,KAAKsI,KAAKxG,EAAGS,GAAG,GAAIA,EACxB+H,EAAItK,KAAKsI,KAAKvG,EAAGS,GAAG,GAAIA,EAI5B,OAHAsD,EAAK9F,KAAKuE,IAAMzC,EAAOC,EAAOD,EAAInB,EAAGoB,EAAIuI,EAAGxE,IAAMkD,GAClDlD,EAAK9F,KAAKuE,IAAMzC,EAAInB,EAAGoB,EAAOQ,EAAI5B,EAAGoB,EAAIuI,EAAGxE,EAAIkD,GAChDlD,EAAK9F,KAAKuE,IAAMzC,EAAOC,EAAIuI,EAAGxI,EAAInB,EAAG6B,EAAI8H,EAAGxE,EAAIkD,GACzChJ,KAAKuE,IAAIzC,EAAInB,EAAGoB,EAAIuI,EAAG/H,EAAI5B,EAAG6B,EAAI8H,EAAGxE,EAAIkD,K,iCAIhD,MAAO,kB,gCAMP,MADc,CAAC,UAAW,UAAW,UAAW,UAAW,WAC5CtH,KAAKuC,MAAMjE,KAAKsI,KAAK,EAAG,O,2BAGpCvC,EAAK2C,GACR,OAAOhH,KAAKoB,UAAY4F,EAAM3C,GAAOA,M,GA3BlBxC,GC6ERgH,E,WA9Eb,WAAYvI,EAAOC,GACS,IAAhBiB,EAAe,uDAAR,CAAC,EAAG,GAAI,oBACzBlD,KAAKwK,kBAAoB,EAEzBxK,KAAKgC,MAAQA,EACbhC,KAAKiC,OAASA,EACdjC,KAAKkD,OAASA,EACdlD,KAAK4I,QAAU,KAEf5I,KAAKyK,QAAU,GACfzK,KAAK0K,a,yDAIL,IAAK,IAAIC,KAAQC,EAAS,CACxB,IAAIC,EAAW,IAAID,EAAQD,GAAM,EAAG,EAAG,EAAG,CAAC,EAAG,IAC9C3K,KAAKyK,QAAQE,GAAQE,EAASxF,WAEhCrF,KAAK8K,iBAAiBC,OAAOC,KAAKhL,KAAKyK,SAAS,M,uCAGjCE,GACf3K,KAAK2K,KAAOA,EACZ3K,KAAK4I,QAAU,IAAIgC,EACjB5K,KAAK2K,MACH3K,KAAKgC,MACLhC,KAAKiC,OACLjC,KAAKwK,kBACLxK,KAAKkD,QACTlD,KAAK8D,eAAiB9D,KAAK4I,QAAQtE,sB,wCAGnBJ,GAChBlE,KAAK8D,eAAiBI,EACtBlE,KAAKiL,YAAYjH,kBAAkBhE,KAAK8D,kB,sCAIxC,OAAO9D,KAAKiL,YAAYC,kB,gCAIxB,OAAOlL,KAAK2K,O,0CAIZ,OAAO3K,KAAK8D,iB,mCAIZ,OAAO9D,KAAKyK,U,kCAIZ,OAAOzK,KAAK4I,U,oCAGArG,EAAGC,GACfxC,KAAKgC,MAAQO,EACbvC,KAAKiC,OAASO,EACdxC,KAAKiL,YAAYE,cAAcnL,KAAKgC,MAAOhC,KAAKiC,U,mCAGrC0I,EAAM3I,EAAOC,EAAQiC,GAWhC,OAVAlE,KAAKgC,MAASA,GAAkBhC,KAAKgC,MACrChC,KAAKiC,OAASA,GAAkBjC,KAAKiC,OAEzB,OAAT0I,GAAiB3K,KAAKoL,YAAcT,EACrC3K,KAAK8K,iBAAiBH,GACH,OAAVzG,GAAkBlE,KAAKsE,sBAAwBJ,EACxDlE,KAAKgE,kBAAkBE,GAEvBlE,KAAKmL,cAAcnL,KAAKgC,MAAOhC,KAAKiC,QAE/BjC,KAAKkL,oB,KCrDDG,EAvBb,WAAYC,GAAM,IAAD,gCAIjBC,mBAAqB,SAACC,GACpB,IAAIC,EAAW/G,OAAO8G,EAAME,OAAO5L,OAC/B6L,EAAQ,EAAKL,IAAIM,MAAMC,aAAa,KAAM,KAAM,KAAMJ,GAC1D,EAAKH,IAAIQ,SAASH,IAPH,KAUjBI,qBAAuB,SAACP,GACtB,IAAIQ,EAAUR,EAAME,OAAO5L,MACvB6L,EAAQ,EAAKL,IAAIM,MAAMC,aAAaG,EAAS,KAAM,KAAM,MAC7D,EAAKV,IAAIQ,SAASH,IAbH,KAgBjBM,eAAiB,WACf,IAAIN,EAAQ,EAAKL,IAAIM,MAAMC,aACzB,KAAK,EAAKP,IAAIY,cAAe,EAAKZ,IAAIa,eAAgB,MACxD,EAAKb,IAAIQ,SAASH,IAlBlB3L,KAAKsL,IAAMA,GCgBAc,G,mLAZX,OAAO,2BACEC,GAAG,SACHC,KAAK,QACLvG,IAAI,IACJ2C,IAAK1I,KAAKuM,MAAMC,eAAezJ,WAC/B0J,aAAa,MACb3M,MAAOE,KAAKuM,MAAMG,mBAClBC,SAAU3M,KAAKuM,MAAMK,mB,GATbC,cCuBNC,G,wDAtBb,WAAYP,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIQ,EAAchC,OAAOiC,QAAQ,EAAKT,MAAMU,iBAF3B,OAGjB,EAAKxC,QAAU,IAAIxJ,MAAM8L,EAAY5M,QAErC4M,EAAYG,SAAQ,SAACC,EAAIxM,GACvB,EAAK8J,QAAQ9J,GAAK,4BACEyM,IAAKzM,EACLb,MAAOqN,EAAG,IACTA,EAAG,OATT,E,qDAejB,OAAO,4BAAQd,GAAG,WACTM,SAAU3M,KAAKuM,MAAMK,cACpB5M,KAAKyK,a,GAlBIoC,cC8BRQ,E,uKAzBX,OACE,wBAAIhB,GAAG,UAAP,IACE,uBACEX,OAAO,SACP4B,IAAI,sBACJC,KACE,6BACIvN,KAAKuM,MAAMnH,OAEhBpF,KAAKuM,MAAMnH,OAGd,kBAAC,EAAD,CACEwH,aAAc5M,KAAKuM,MAAMhB,mBACzBmB,mBAAoB1M,KAAKuM,MAAMG,mBAC/BF,eAAgBxM,KAAKuM,MAAMC,iBAE7B,kBAAC,EAAD,CACEI,aAAc5M,KAAKuM,MAAMR,qBACzBkB,gBAAiBjN,KAAKuM,MAAMU,uB,GArBjBJ,aCsDNW,G,iLAvD0B,IAA5BC,EAA2B,wDAChCC,EAAS1N,KAAK2N,KAAKD,OACjBE,EAAUF,EAAOG,WAAW,MAC9BJ,GACFG,EAAQE,UAAU,EAAG,EAAGJ,EAAO1L,MAAO0L,EAAOzL,QAE/C,IANoC,EAMhC2B,EAAS5D,KAAKuM,MAAM3D,QAAQhF,OANI,cAOpBA,GAPoB,IAOpC,2BAAwB,CAAC,IAAdqB,EAAa,QACtBjF,KAAK+N,UAAUH,EAAS3I,IARU,iC,0CAapCjF,KAAKgO,e,2CAILhO,KAAKgO,YAAW,K,gCAGRJ,EAASK,GACjBL,EAAQxL,UAAY6L,EAAMC,eAC1BN,EAAQvL,YAAc4L,EAAME,iBAC5BP,EAAQtL,UAAY2L,EAAMG,eAC1BR,EAAQS,YAER,IAAIC,EAAOL,EAAMpL,cAEjB+K,EAAQW,OAAOD,EAAK,GAAG,GAAIA,EAAK,GAAG,IAEnC,IAAK,IAAI3N,EAAI,EAAGA,EAAI2N,EAAKnO,OAAQQ,IAC/BiN,EAAQY,OAAOF,EAAK3N,GAAG,GAAI2N,EAAK3N,GAAG,IAGrCiN,EAAQa,YACRb,EAAQc,SAEJT,EAAMU,QACRf,EAAQe,S,+BAKV,IAAI3M,EAAOC,EAGX,OAFAD,EAAQhC,KAAKuM,MAAM3D,QAAQ5G,MAC3BC,EAASjC,KAAKuM,MAAM3D,QAAQ3G,OACrB,4BACEoK,GAAG,eACHuC,IAAI,SACJ5M,MAAOA,EACPC,OAAQA,Q,GApDI4K,cCsCVgC,G,wDAlCb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDuC,OAAS,EACd,EAAKC,QAAU,IAAI1D,EAAJ,gBACf,EAAKO,MAAQ,IAAIrB,EAAM,EAAK2B,cAAe,EAAKC,gBAChD,EAAKR,MAAQ,EAAKC,MAAMV,gBACxB8D,OAAOC,iBAAiB,SAAU,EAAKF,QAAQ9C,gBAN9B,E,0DAUjB,OAAO+C,OAAOE,a,qCAId,OAAOF,OAAOG,c,+BAId,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CACE7D,mBAAoBvL,KAAK+O,QAAQxD,mBACjCmB,mBAAoB1M,KAAK2L,MAAM7H,eAC/B0I,eAAgBxM,KAAK2L,MAAMnG,kBAC3BuG,qBAAsB/L,KAAK+O,QAAQhD,qBACnCkB,gBAAiBjN,KAAK4L,MAAMyD,aAC5BjK,MAAOpF,KAAK2L,MAAMvG,QAEpB,kBAAC,EAAD,CAAYwD,QAAS5I,KAAK2L,a,GA9BhBkB,cCDlByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ffbf79fc.chunk.js","sourcesContent":["class ListNode {\n  constructor(value, next) {\n    this.value = value;\n    this.next = next;\n  }\n  setNext(listNode) {\n    this.next = listNode;\n  }\n  setValue(value) {\n    this.value = value;\n  }\n  getNext() {\n    return this.next;\n  }\n  getValue() {\n    return this.value;\n  }\n}\n\nclass LinkedList {\n  constructor() {\n    this.length = 0;\n    this.head = null;\n    this.current = null;\n  }\n\n  isEmpty() {\n    return this.length === 0;\n  }\n  \n  tail() {\n    if (this.isEmpty())\n      return null;\n    return this.current.getValue();\n  }\n\n  slice(begin, end = null) {\n    if (!end)\n      end = this.length;\n    let ret = new LinkedList();\n    let i = 0;\n    for (const nodeValue of this) {\n      if (begin <= i && i < end)\n        ret.add(nodeValue);\n      i++;\n    }\n    return ret;\n  }\n  \n  add(value) {\n    if (this.isEmpty()) {\n      this.head = new ListNode(value, null);\n      this.current = this.head;\n    } else {\n      let toAdd = new ListNode(value, null);\n      this.current.setNext(toAdd);\n      this.current = toAdd;\n    }\n    return ++this.length;\n  }\n\n  toArray() {\n    let i = 0;\n    let arr = new Array(this.length);\n    for (const nodeValue of this) {\n      arr[i++] = nodeValue;\n    }\n    return arr;\n  }\n\n  *[Symbol.iterator]() {\n    if(this.isEmpty()) {\n      return;\n    }\n    let currentNode = this.head;\n    while (currentNode.getNext()) {\n      let ret = currentNode.getValue();\n      currentNode = currentNode.getNext();\n      yield ret;\n    }\n    yield currentNode.getValue();\n  }\n}\n\n\n// let ls = new LinkedList();\n// ls.add('ant');\n// ls.add('bison');\n// ls.add('camel');\n// ls.add('duck');\n// ls.add('elephant');\n\n// for (const e of ls)\n//   console.log(e);\n\n// console.log('To Array: ' + ls.toArray());\n// console.log('Tail: ' + ls.tail());\n// // expected output: Array [\"camel\", \"duck\", \"elephant\"]\n// console.log(ls.slice(2).toArray());\n// // expected output: Array [\"camel\", \"duck\"]\n// console.log(ls.slice(2, 4).toArray());\n// // expected output: Array [\"bison\", \"camel\", \"duck\", \"elephant\"]\n// console.log(ls.slice(1, 5).toArray());\n\nexport default LinkedList;\n","class Vector {\n  constructor(start, l, radians) {\n    this.start = start;\n    this.l = l;\n    this.radians = radians;\n    this.end = [this.start[0] + l * Math.cos(radians),\n    this.start[1] + l * Math.sin(radians)];\n  }\n\n  cords() {\n    return [this.start, this.end];\n  }\n}\n\nexport default Vector;\n","const cos = Math.cos;\nconst sin = Math.sin;\n\nclass Point {\n  constructor(x, y, width, height, vertices = null,\n    toFill = true, fillStyle = null,\n    strokeStyle = null, lineWidth = 1) {\n    this.x = x;\n    this.y = y;\n    this.w = width;\n    this.h = height;\n    this.toFill = toFill;\n    this.lineWidth = lineWidth;\n    this.vertices = vertices ? vertices : this.square();\n    this.fillStyle = fillStyle ? fillStyle : this.getRandomColor();\n    this.strokeStyle = strokeStyle ? strokeStyle : this.fillStyle;\n  }\n\n  square() {\n    return [\n      [this.x, this.y],                   // top left corner\n      [this.x + this.w, this.y],          // top right corner\n      [this.x + this.w, this.y + this.h], // bottom right corner\n      [this.x, this.y + this.h],          // bottom left corner\n    ];\n  }\n\n  translate(a = 0, b = 0) {\n    for (let vertices of this.getVertices()) {\n      vertices[0] += a;\n      vertices[1] += b;\n    }\n  }\n\n  getRandomColor() {\n    let ret = (0x1000000 + Math.random() * 0xffffff);\n    return '#' + ret.toString(16).substr(1, 6);\n  }\n\n  getVertices() {\n    return this.vertices;\n  }\n\n  fill() {\n    return this.toFill;\n  }\n\n  getFillStyle() {\n    return this.fillStyle;\n  }\n\n  getStrokeStyle() {\n    return this.strokeStyle;\n  }\n\n  getLineWidth() {\n    return this.lineWidth;\n  }\n\n  setFillStyle(fillStyle) {\n    this.fillStyle = fillStyle;\n  }\n\n  setStrokeStyle(strokeStyle) {\n    this.strokeStyle = strokeStyle;\n  }\n\n  rotate(rad, origin = null) {\n    if (rad === 0)\n      return;\n\n    let X, Y;\n    if (origin === null) {\n      X = this.x + this.w / 2;\n      Y = this.y + this.h / 2;\n    } else {\n      X = origin[0];\n      Y = origin[1];\n    }\n\n    let T = [[cos(rad), sin(rad), X - (X * cos(rad) + Y * sin(rad))],\n    [-sin(rad), cos(rad), Y - (Y * cos(rad) - X * sin(rad))],\n    [0, 0, 1]];\n    for (let i = 0; i < this.vertices.length; i++) {\n      let x = this.vertices[i][0];\n      let y = this.vertices[i][1];\n      let z = 1;\n      this.vertices[i] = [(x * T[0][0]) + (y * T[0][1]) + (z * T[0][2]),\n      (x * T[1][0]) + (y * T[1][1]) + (z * T[1][2])];\n    }\n    // {{cos(r), sin(r), x - (x cos(r) + y sin(r))},\n    // {-(sin(r)), cos(r), y - (y cos(r) - x sin(r))}, {0, 0, 1}}\n    // *{{x,x+w,x+w,x},{y,y,y+h,y+h},{1,1,1,1}}\n  }\n}\n\nexport default Point;\n\n","// eslint-disable-next-line\nimport {Point} from '../data_structures/DataStructureIndex.js';\n\n\nclass AbstractFigure {\n  constructor(width, height, maxDepth, origin, toCenterFractal = false) {\n    if (this.constructor === AbstractFigure) {\n      throw new Error(\"Abstract classes can't be instantiated.\");\n    }\n    this.maxDepth = maxDepth;\n    this.points = null;\n    this.width = width;\n    this.height = height;\n    this.origin = origin;\n    this.toCenterFractal = toCenterFractal;\n    this.depthToPoints = new Array(10 + 1);\n    this.recursionDepth = -1;\n    this.setDepthToDefault(); // initial depth\n  }\n\n  setDepthToDefault() {\n    this.setRecursionDepth(Math.round(this.maxDepth / 2));\n  }\n\n  setRecursionDepth(depth) {\n    this.recursionDepth = depth;\n    this.setPoints();\n  }\n\n  setDimensions(w, h) {\n    this.width = w;\n    this.height = h;\n    this.wipeOutDepthToPointArray();\n    this.setPoints();\n  }\n\n  setPoints() {\n    if (this.pointsNeedBeSet()) {\n      // console.log('I set '+ this.getTitle() + ' for ' + this.getRecursionDepth());\n      this.depthToPoints[this.getRecursionDepth()] = this.set(\n        this.origin[0], this.origin[1],\n        this.width, this.height);\n      if (this.toCenterFractal) {\n        this.centerFractal();\n      }\n    }\n  }\n\n  wipeOutDepthToPointArray() {\n    this.depthToPoints = new Array(10 + 1);\n  }\n\n  set(/* x, y, w, h, ls=new LinkedList(), r = 0 */) {\n    throw new Error(\"Method 'set()' must be implemented.\");\n  }\n\n  centerFractal() {\n    let minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY,\n      maxX = Number.NEGATIVE_INFINITY,\n      maxY = Number.NEGATIVE_INFINITY;\n    for (let p of this.getPoints()) {\n      for (let vertex of p.getVertices()) {\n        minX = vertex[0] < minX ? vertex[0] : minX;\n        minY = vertex[1] < minY ? vertex[1] : minY;\n        maxX = vertex[0] > maxX ? vertex[0] : maxX;\n        maxY = vertex[1] > maxY ? vertex[1] : maxY;\n      }\n    }\n    let midW = this.width / 2,\n      midH = this.height / 2;\n    let midX = (maxX - minX) / 2,\n      midY = (maxY - minY) / 2;\n    let a = midW - midX - minX,\n      b = midH - midY - minY;\n    // bounding box\n    // let p = new Point(minX,\n    //   minY,\n    //   maxX - minX,\n    //   maxY - minY,\n    //   null, false);\n    // this.getPoints().add(p);\n    for (let p of this.getPoints()) {\n      p.translate(a, b);\n    }\n  }\n\n  pointsNeedBeSet() {\n    return !this.depthToPoints[this.getRecursionDepth()];\n  }\n\n  getTitle() {\n    throw new Error(\"Method 'getTitle()' must be implemented.\");\n  }\n\n  getReactState() {\n    return {\n      title: this.getTitle(),\n      width: this.getWidth(),\n      height: this.getHeight(),\n      points: this.getPoints(),\n      recursionDepth: this.getRecursionDepth(),\n      maxRecursionDepth: this.maxDepth,\n    };\n  }\n\n  getPoints() {\n    return this.depthToPoints[this.getRecursionDepth()];\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getRecursionDepth() {\n    return this.recursionDepth;\n  }\n\n  *linspace(lower, upper, num_points = 10) {\n    let step = (upper - lower) / (num_points - 1);\n    for (let i = 0; i < num_points; i++) {\n      yield (lower + (i * step));\n    }\n  }\n}\n\nexport default AbstractFigure;\n","import AbstractFigure from './AbstractFigure.js';\nimport { LinkedList, Vector, Point } from '../data_structures/DataStructureIndex.js';\n\nconst SCALE = 0.43;\n\nclass HeighwayDragon extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 14, origin, true);\n  }\n\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    let l = SCALE * Math.min(w, h);\n    let seed = new Vector([x, y], l, 0);\n    ls = this.dragon(seed, ls, this.recursionDepth, 'red');\n    seed = new Vector([x, y], l, Math.PI / 2);\n    ls = this.dragon(seed, ls, this.recursionDepth, 'green');\n    seed = new Vector([x, y], l, Math.PI);\n    ls = this.dragon(seed, ls, this.recursionDepth, 'blue');\n    seed = new Vector([x, y], l, 1.5 * Math.PI);\n    return this.dragon(seed, ls, this.recursionDepth, 'yellow');\n  }\n\n  dragon(v, ls, recurLeft, color, clockwise = true) {\n    if (recurLeft === 0) {\n      let vertices = v.cords();\n      ls.add(new Point(vertices[0][0], vertices[0][1], 0, 0, vertices, true, color));\n      return ls;\n    } else {\n      let radians = clockwise ? Math.PI / 4 : -Math.PI / 4;\n      let t1 = new Vector([...v.start], this.len(v.l), v.radians + radians);\n      ls = this.dragon(t1, ls, recurLeft - 1, color, true);\n      radians = clockwise ? -Math.PI / 4 : Math.PI / 4;\n      let t2 = new Vector([...t1.end], this.len(v.l), v.radians + radians);\n      return this.dragon(t2, ls, recurLeft - 1, color, false);\n    }\n  }\n\n  len(l) {\n    return (l ** 2 / 2) ** (1 / 2);\n  }\n\n  getTitle() {\n    return 'Harter–Heighway Dragon';\n  }\n}\n\nexport default HeighwayDragon;\n","import AbstractFigure from './AbstractFigure.js';\nimport { LinkedList, Point } from '../data_structures/DataStructureIndex.js';\n\n\n// const cos = Math.cos;\nconst sin = Math.sin;\nconst pow = Math.pow;\nconst PI = Math.PI;\nconst DEPTH = pow(10, 4);\nconst COLOUR_DICT = {\n  0: '#CC2A49',\n  0.333: '#F99E4C',\n  0.666: '#582841'\n};\n\nclass ParametricFish extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, DEPTH, origin, true);\n  }\n\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    let p, i, c;\n    const T = this.linspace(-13, 13, this.recursionDepth);\n    for (i = 0; i < this.recursionDepth; i++) {\n      [x, y] = this.parametricCurve(T.next().value, Math.min(w, h));\n      for (c of [0, 0.333, 0.666]) {\n        p = new Point(x, y, 1, 1, null, false, COLOUR_DICT[c]);\n        p.rotate(c * PI, [0, 0]);\n        ls.add(p);\n      }\n    }\n    return ls;\n  }\n\n  parametricCurve(t, scale) {\n    const C = Math.round(0.35*scale); // scaling factor\n    return [C * (sin(1.36 * t) / pow((1 + pow(sin(10.8*t), 2)),2)),\n            C * pow(sin(1.36 * t), 3)];\n  }\n\n  getTitle() {\n    return 'Curve by LThMath 1';\n  }\n}\n\nexport default ParametricFish;\n","import AbstractFigure from './AbstractFigure.js';\nimport { LinkedList, Point } from '../data_structures/DataStructureIndex.js';\n\n\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst pow = Math.pow;\nconst PI = Math.PI;\nconst DEPTH = pow(10, 4);\nconst COLOUR_DICT = {\n  0: '#EFDBCB',\n  0.5: '#4BB4DE',\n  1: '#FCD593',\n  1.5: '#345DA7'\n};\n\n\nclass ParametricFish extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, DEPTH, origin, true);\n  }\n\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    let p, i, c;\n    const T = this.linspace(-2 * PI, 2 * PI, DEPTH);\n    for (i = 0; i < this.recursionDepth; i++) {\n      [x, y] = this.parametricCurve(T.next().value, Math.min(w, h));\n      for (c of [0, 0.5, 1, 1.5]) {\n        p = new Point(x, y, 1, 1, null, false, this.colour(c, i));\n        p.rotate(c * PI, [0, 0]);\n        ls.add(p);\n      }\n    }\n    return ls;\n  }\n\n  parametricCurve(t, scale) {\n    const C = Math.round(0.25 * scale); // scaling factor\n    return [C * pow(sin(-5 * t), 2) * pow(2, cos(cos(4.28 * 2.3 * t))),\n    C * sin(sin(-5 * t)) * pow(cos(4.28 * 2.3 * t), 2)];\n  }\n\n  colour(angle, itr) {\n    let a = Math.round((itr % 10 / 10) * 255).toString(16);\n    a = a.length === 1 ? '0' + a : a;\n    return COLOUR_DICT[angle] + a;\n  }\n\n  getTitle() {\n    return 'Curve by LThMath 2';\n  }\n}\n\nexport default ParametricFish;\n","import AbstractFigure from './AbstractFigure.js';\nimport {LinkedList, Point} from '../data_structures/DataStructureIndex.js';\n\n\nconst BRANCHES = 3;\nconst MIN_ANGLE = 0;\nconst MAX_ANGLE = Math.PI / 4;\nconst MIN_LENGTH = 0.30;\nconst MAX_LENGTH = 0.90;\n\nclass TreeBranch extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 10, origin);\n  }\n\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    this.branch([x, y], 0.3 * (Math.sqrt(w * w + h * h)),\n      Math.PI / 4, this.recursionDepth, ls);\n    return ls;\n  }\n\n  branch(start, l, radians, recurLeft, ls) {\n    if (recurLeft > 0) {\n      let dir = Math.random() > 0.5 ? 1 : -1;\n      let vertices = [start, this.end(start, l, radians)];\n      let p = new Point(start[0], start[1], 0, 0, vertices, true, this.palette());\n      ls.add(p);\n      for (let i = 0; i < BRANCHES; i++) {\n        let new_l = this.rand(l * MIN_LENGTH, l * MAX_LENGTH);\n        let new_start = this.end(start, new_l, radians);\n        let new_radians = radians + dir * this.rand(MIN_ANGLE, MAX_ANGLE);\n        dir *= -1;\n        this.branch(new_start, new_l, new_radians, recurLeft - 1, ls);\n      }\n    }\n  }\n\n  end(start, radius, radians) {\n    return [start[0] + radius * Math.cos(radians),\n    start[1] + radius * Math.sin(radians)];\n  }\n\n  palette() {\n    let palette = ['#77a37a', '#5f926a', '#587e60', '#485e52', '#3a4f3f',\n      '#77a37a', '#5f926a', '#587e60', '#485e52', '#3a4f3f',\n      '#77a37a', '#5f926a', '#587e60', '#485e52', '#3a4f3f',\n      '#603C14', '#9C2706', '#D45B12', '#F3BC2E', '#5F5426'];\n    return palette[Math.round(this.rand(0, palette.length - 1))];\n  }\n\n  rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  getTitle() {\n    return 'Tree Branch Fractal';\n  }\n}\n\nexport default TreeBranch;\n","import AbstractFigure from './AbstractFigure.js';\nimport {LinkedList, Vector, Point} from '../data_structures/DataStructureIndex.js';\n\n\nclass KochSnowflake extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 6, origin, true);\n  }\n\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    let l = Math.min(w, h);\n    // left\n    let seed = new Vector([x + l / 2, y + l / 10], l * (3 / 4), Math.PI * (2 / 3));\n    ls = this.fractal(seed, ls, this.recursionDepth);\n    // right\n    seed = new Vector([x + l * (35 / 40), y + l * (3 / 4)], l * (3 / 4), Math.PI * (-2 / 3));\n    ls = this.fractal(seed, ls, this.recursionDepth);\n    // bottom\n    seed = new Vector([x + l * (5 / 40), y + l * (3 / 4)], l * (3 / 4), 0);\n    ls = this.fractal(seed, ls, this.recursionDepth);\n    return ls;\n  }\n\n  fractal(v, ls, recurLeft) {\n    if (recurLeft === 0) {\n      let vertices = v.cords();\n      ls.add(new Point(vertices[0][0], vertices[0][1], 0, 0, vertices, true, '#fffafa', null, 2));\n      return ls;\n    } else {\n      let t1 = new Vector([...v.start], v.l / 3, v.radians);\n      let t2 = new Vector([...t1.end], v.l / 3, v.radians + Math.PI / 3);\n      let t3 = new Vector([...t2.end], v.l / 3, v.radians - Math.PI / 3);\n      let t4 = new Vector([...t3.end], v.l / 3, v.radians);\n      ls = this.fractal(t1, ls, recurLeft - 1);\n      ls = this.fractal(t2, ls, recurLeft - 1);\n      ls = this.fractal(t3, ls, recurLeft - 1);\n      return this.fractal(t4, ls, recurLeft - 1);\n    }\n  }\n\n  getTitle() {\n    return 'Koch Snowflake';\n  }\n}\n\nexport default KochSnowflake;\n","import AbstractFigure from './AbstractFigure.js';\nimport {LinkedList, Point} from '../data_structures/DataStructureIndex.js';\n\n\nclass SierpinskiTri extends AbstractFigure {\n  set(x, y, w, h, ls=new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let vertices = [[x + w / 2, y], [x, y + h], [x + w, y + h]];\n      let p = new Point(x, y, w, h, vertices);\n      ls.add(p);\n      return ls;\n    }\n    \n    ls = this.set(  x        , y + h / 2, w / 2, h / 2, ls, ++r);\n    ls = this.set(  x + w / 2, y + h / 2, w / 2, h / 2, ls, r);\n    return this.set(x + w / 4, y        , w / 2, h / 2, ls, r);\n  }\n\n  getTitle() {\n    return 'Sierpinski\\'s Triangle';\n  }\n}\n\nexport default SierpinskiTri;\n","/*\n The code in this fractal is a little bit of a mess.\n I tried making this:\n https://fractaltales.blogspot.com/2013/08/self-similar-fractals-quilts-and.html\n*/\n\nimport AbstractFigure from './AbstractFigure.js';\nimport {LinkedList, Point} from '../data_structures/DataStructureIndex.js';\n\n\nclass QuiltFractal extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 7, origin, true);\n  }\n\n  set(x, y, w, h) {\n    let l = Math.min(w, h);\n    let points = this.markPoints(x, y, l);\n    this.rotatePoints(points, 0, this.getRecursionDepth());\n    this.rotatePoints(points, 1, this.getRecursionDepth());\n    this.rotatePoints(points, 2, this.getRecursionDepth());\n    this.rotatePoints(points, 3, this.getRecursionDepth());\n    return this.rotatePoints(points, 4, this.getRecursionDepth());\n  }\n\n  markPoints(x, y, l, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, l, l, null, false, '#afff14');\n      ls.add(p);\n      return ls;\n    }\n\n    let l_new = 0.25 * l;\n    let x_new = x + 0.75 * l;\n    let y_new = y + 0.75 * l;\n    \n    ls = this.markPoints(x    , y    , l_new, ls, ++r);\n    ls = this.markPoints(x_new, y    , l_new, ls,   r);\n    ls = this.markPoints(x_new, y_new, l_new, ls,   r);\n    ls = this.markPoints(x    , y_new, l_new, ls,   r);\n    return this.markPoints(this.cord(x, l), this.cord(y, l),\n                           this.dist(l), ls, r);\n  }\n\n  rotatePoints(points, starting_block, r) {\n    if (r === 0)\n      return points;\n    \n    let indices = this.subsetIndices(starting_block, r);\n    let pointsSliced = points.slice(indices[0], indices[1]);\n    let O = pointsSliced.tail();\n    O = [O.x + O.w/2, O.y + O.h/2];\n    if (starting_block === 4)\n      this.rotateAll(pointsSliced, O);\n\n    this.rotatePoints(pointsSliced, 4, --r);\n    return points;\n  }\n\n  rotateAll(points, rotationOrigin) {\n    for (const p of points) {\n      p.rotate(Math.PI/4, rotationOrigin);\n    }\n  }\n  \n  subsetIndices(position, r) {\n    if (position > 4 || position < 0)\n      throw new Error(\"subsetIndices(position), invalid position: \" + position);\n    return [(position)*(Math.pow(5, r - 1)), (position+1)*(Math.pow(5, r - 1))];\n  }\n  \n  dist(l) {\n    return Math.sqrt(2) * l / 2;\n  }\n\n  cord(cordinate, l) {\n    return cordinate + (l / 2) - (this.dist(l) / 2);\n  }\n  \n  getTitle() {\n    return 'Some Fractal Quilt';\n  }\n}\n\nexport default QuiltFractal;\n","import AbstractFigure from './AbstractFigure.js';\nimport {LinkedList, Point} from '../data_structures/DataStructureIndex.js';\n\n\nclass BoxFractal extends AbstractFigure {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 7, origin);\n  }\n  \n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, w, h);\n      ls.add(p);\n      return ls;\n    }\n\n    ls = this.set(x, y, w / 3, h / 3, ls, ++r);\n    ls = this.set(x + 2 * w / 3, y, w / 3, h / 3, ls, r);\n    ls = this.set(x, y + 2 * h / 3, w / 3, h / 3, ls, r);\n    ls = this.set(x + 2 * w / 3, y + 2 * h / 3, w / 3, h / 3, ls, r);\n    return this.set(x + w / 3, y + h / 3, w / 3, h / 3, ls, r);\n  }\n\n  getTitle() {\n    return 'Box Fractal';\n  }\n}\n\nexport default BoxFractal;\n","import AbstractFigure from './AbstractFigure.js';\nimport {LinkedList, Point} from '../data_structures/DataStructureIndex.js';\n\n\nclass Mondrian extends AbstractFigure {\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, w, h,\n                        null, true, this.palette(), '#30303a', 5);\n      ls.add(p);\n      return ls;\n    }\n    let i = this.rand(x, w)+0.2*w;\n    let j = this.rand(y, h)+0.2*h;\n    ls = this.set(  x    , y    , x + i, y + j, ls, ++r); // upper left rectangle\n    ls = this.set(  x + i, y    , w - i, y + j, ls, r);   // upper right rectangle\n    ls = this.set(  x    , y + j, x + i, h - j, ls, r);   // lower left rectangle\n    return this.set(x + i, y + j, w - i, h - j, ls, r);   // lower right rectangle\n  }\n\n  getTitle() {\n    return 'Piet Mondrian';\n  }\n\n  palette() {\n                 // white      red        yellow     blue       black\n    let palette = ['#FEFFFA', '#F60201', '#FDED01', '#1F7FC9', '#30303a'];\n    return palette[Math.round(this.rand(0, 4))];\n  }\n  \n  rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n}\n\nexport default Mondrian;\n","import * as Figures from './figures/FigureIndex.js';\n\nclass Model {\n  constructor(width, height,\n              origin=[0, 0]) {\n    this.DEFAULT_MAX_DEPTH = 8;\n    \n    this.width = width;\n    this.height = height;\n    this.origin = origin;\n    this.fractal = null;\n    \n    this.options = {};\n    this.setOptions();\n  } // constructor ends here\n\n  setOptions() {\n    for (let name in Figures) {\n      let currFrac = new Figures[name](0, 0, 0, [0, 0]);\n      this.options[name] = currFrac.getTitle();\n    }\n    this.setNameAndFigure(Object.keys(this.options)[0]);\n  }\n\n  setNameAndFigure(name) {\n    this.name = name;\n    this.fractal = new Figures[\n      this.name](\n        this.width,\n        this.height,\n        this.DEFAULT_MAX_DEPTH,\n        this.origin);\n    this.recursionDepth = this.fractal.getRecursionDepth();\n  }\n  \n  setRecursionDepth(depth) {\n    this.recursionDepth = depth;\n    this.getFigure().setRecursionDepth(this.recursionDepth);\n  }\n\n  getReactState() {\n    return this.getFigure().getReactState();\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  getRecursionDepth() {\n    return this.recursionDepth;\n  }\n  \n  getOptions() {\n    return this.options;\n  }\n\n  getFigure() {\n    return this.fractal;\n  }\n\n  setDimensions(w, h) {\n    this.width = w;\n    this.height = h;\n    this.getFigure().setDimensions(this.width, this.height);\n  }\n\n  updateFigure(name, width, height, depth) {\n    this.width  = width  ? width  : this.width;\n    this.height = height ? height : this.height;\n    \n    if(name !== null && this.getName() !== name) {\n      this.setNameAndFigure(name);\n    } else if (depth !== null && this.getRecursionDepth() !== depth) {\n      this.setRecursionDepth(depth);\n    } else {\n      this.setDimensions(this.width, this.height);\n    }\n    return this.getReactState();\n  }\n}\n\nexport default Model;\n","class Control {\n  constructor(app) {\n    this.app = app;\n  }\n\n  sliderEventHandler = (event) => {\n    let newDepth = Number(event.target.value);\n    let state = this.app.model.updateFigure(null, null, null, newDepth);\n    this.app.setState(state);\n  }\n\n  dropdownEventHandler = (event) => {\n    let newName = event.target.value;\n    let state = this.app.model.updateFigure(newName, null, null, null);\n    this.app.setState(state);\n  }\n\n  onWindowResize = () => {\n    let state = this.app.model.updateFigure(\n      null,this.app.getWinWidth(), this.app.getWinHeight(), null);\n    this.app.setState(state);\n  }\n}\n\nexport default Control;\n","import '../css/Slider.css';\n\nimport React, { Component } from 'react';\n\nclass Slider extends Component {\n  render() {\n    return <input\n             id='slider'\n             type='range'\n             min='0'\n             max={this.props.sliderMaxValue.toString()}\n             autoComplete='off'\n             value={this.props.sliderInitialValue}\n             onChange={this.props.eventHandler}\n           />;\n  }\n}\n\nexport default Slider;\n\n","import '../css/Dropdown.css';\n\nimport React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    let optionsList = Object.entries(this.props.dropdownOptions);\n    this.options = new Array(optionsList.length);\n\n    optionsList.forEach((op, i) => {\n      this.options[i] = <option\n                          key={i}\n                          value={op[0]}>\n                          {op[1]}\n                        </option>;\n    });\n  }\n\n  render() {\n    return <select id='dropdown'\n             onChange={this.props.eventHandler}>\n             {this.options}\n           </select>;\n  }\n}\n\nexport default Dropdown;\n","import '../css/Header.css';\n\nimport Slider from './Slider.js';\nimport Dropdown from './Dropdown.js';\nimport React, { Component } from 'react';\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <h1 id='header'> {\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={\n            'https://duckduckgo.com/?q='\n              + this.props.title\n          }>\n          {this.props.title}\n        </a>\n      }\n        <Slider\n          eventHandler={this.props.sliderEventHandler}\n          sliderInitialValue={this.props.sliderInitialValue}\n          sliderMaxValue={this.props.sliderMaxValue}\n        />\n        <Dropdown\n          eventHandler={this.props.dropdownEventHandler}\n          dropdownOptions={this.props.dropdownOptions}\n        />\n      </h1>\n    );\n  }\n}\nexport default Header;\n","import '../css/FigurePane.css';\n\nimport React, { Component } from 'react';\n\nclass FigurePane extends Component {\n\n  plotPoints(toClearPreviousPlot=false) {\n    let canvas = this.refs.canvas;\n    const context = canvas.getContext('2d');\n    if (toClearPreviousPlot) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n    let points = this.props.fractal.points;\n    for (const p of points) {\n      this.drawPoint(context, p);\n    }\n  }\n  \n  componentDidMount() {\n    this.plotPoints();\n  }\n\n  componentDidUpdate() {\n    this.plotPoints(true);\n  }\n\n  drawPoint(context, point) {\n    context.fillStyle = point.getFillStyle();\n    context.strokeStyle = point.getStrokeStyle();\n    context.lineWidth = point.getLineWidth();\n    context.beginPath();\n    \n    let vert = point.getVertices();\n    // vert.push(vert[0]);\n    context.moveTo(vert[0][0], vert[0][1]);\n\n    for (let i = 1; i < vert.length; i++) {\n      context.lineTo(vert[i][0], vert[i][1]);\n    }\n\n    context.closePath();\n    context.stroke();\n    \n    if (point.fill()) {\n      context.fill();\n    }\n  }\n\n  render() {\n    let width, height;\n    width = this.props.fractal.width;\n    height = this.props.fractal.height;\n    return <canvas\n             id='fractal_pane'\n             ref='canvas'\n             width={width}\n             height={height}\n           />;\n  }\n}\n\nexport default FigurePane;\n","import React, { Component } from 'react';\nimport Model from '../model/Model.js';\nimport Control from '../control/Control.js';\nimport { FigurePane, Header } from './components/ComponentIndex.js';\nimport './css/App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.MARGIN = 0;\n    this.control = new Control(this);\n    this.model = new Model(this.getWinWidth(), this.getWinHeight());\n    this.state = this.model.getReactState();\n    window.addEventListener(\"resize\", this.control.onWindowResize);\n  }\n\n  getWinWidth() {\n    return window.innerWidth;\n  }\n\n  getWinHeight() {\n    return window.innerHeight;\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          sliderEventHandler={this.control.sliderEventHandler}\n          sliderInitialValue={this.state.recursionDepth}\n          sliderMaxValue={this.state.maxRecursionDepth}\n          dropdownEventHandler={this.control.dropdownEventHandler}\n          dropdownOptions={this.model.getOptions()}\n          title={this.state.title}\n        />\n        <FigurePane fractal={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './view/css/index.css';\nimport App from './view/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}