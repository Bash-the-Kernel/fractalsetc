{"version":3,"sources":["model/fractals/Point.js","model/fractals/LinkedList.js","model/fractals/AbstractFractal.js","model/fractals/TreeBranch.js","model/fractals/KochSnowflake.js","model/fractals/SierpinskiTri.js","model/fractals/QuiltFractal.js","model/fractals/BoxFractal.js","model/fractals/Mondrian.js","model/Model.js","control/Control.js","view/components/Slider.js","view/components/Dropdown.js","view/components/Header.js","view/components/FractalPane.js","view/App.js","index.js"],"names":["cos","Math","sin","Point","x","y","width","height","vertices","toFill","fillStyle","strokeStyle","lineWidth","this","w","h","square","getRandomColor","random","toString","substr","rad","origin","X","Y","T","i","length","ListNode","value","next","listNode","LinkedList","head","current","isEmpty","getValue","begin","end","ret","nodeValue","add","toAdd","setNext","arr","Array","Symbol","iterator","currentNode","getNext","AbstractFractal","maxDepth","constructor","Error","points","depthToPoints","recursionDepth","setDepthToDefault","setRecursionDepth","round","depth","setPoints","wipeOutDepthToPointArray","pointsNeedBeSet","getRecursionDepth","set","title","getTitle","getWidth","getHeight","getPoints","maxRecursionDepth","MAX_ANGLE","PI","TreeBranch","ls","branch","sqrt","start","l","radians","recurLeft","dir","p","palette","new_l","rand","new_start","new_radians","radius","min","max","Vector","KochSnowflake","seed","fractal","v","addVector","t1","t2","t3","t4","SierpinskiTri","r","QuiltFractal","markPoints","rotatePoints","l_new","x_new","y_new","cord","dist","starting_block","indices","subsetIndices","pointsSliced","slice","O","tail","rotateAll","rotationOrigin","rotate","position","pow","cordinate","BoxFractal","Mondrian","j","Model","DEFAULT_MAX_DEPTH","options","setOptions","name","Fractals","currFrac","setNameAndFractal","Object","keys","getFractal","getReactState","setDimensions","getName","Control","app","sliderEventHandler","event","newDepth","Number","target","state","model","updateFractal","setState","dropdownEventHandler","newName","onWindowResize","getWinWidth","getWinHeight","Slider","id","type","props","sliderMaxValue","autoComplete","sliderInitialValue","onChange","eventHandler","Component","Dropdown","optionsList","entries","dropdownOptions","forEach","op","key","Header","rel","href","FractalPane","toClearPreviousPlot","canvas","refs","context","getContext","clearRect","drawPoint","plotPoints","point","getFillStyle","getStrokeStyle","getLineWidth","beginPath","vert","getVertices","moveTo","lineTo","closePath","stroke","fill","ref","App","MARGIN","control","window","addEventListener","innerWidth","innerHeight","className","getOptions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25c6410e.chunk.js","sourcesContent":["const cos = Math.cos;\nconst sin = Math.sin;\n\nclass Point {\n  constructor(x, y, width, height, vertices = null,\n              toFill = true, fillStyle = null,\n              strokeStyle = null, lineWidth = 1) {\n    this.x = x;\n    this.y = y;\n    this.w = width;\n    this.h = height;\n    this.toFill = toFill;\n    this.lineWidth = lineWidth;\n    this.vertices = vertices ? vertices : this.square();\n    this.fillStyle = fillStyle ? fillStyle : this.getRandomColor();\n    this.strokeStyle = strokeStyle ? strokeStyle : this.fillStyle;\n  }\n\n  square() {\n    return [\n      [this.x, this.y],                   // top left corner\n      [this.x + this.w, this.y],          // top right corner\n      [this.x + this.w, this.y + this.h], // bottom right corner\n      [this.x, this.y + this.h],          // bottom left corner\n    ];\n  }\n\n  getRandomColor() {\n    let ret = (0x1000000 + Math.random() * 0xffffff);\n    return '#' + ret.toString(16).substr(1, 6);\n  }\n\n  getVertices() {\n    return this.vertices;\n  }\n\n  fill() {\n    return this.toFill;\n  }\n  \n  getFillStyle() {\n    return this.fillStyle;\n  }\n\n  getStrokeStyle() {\n    return this.strokeStyle;\n  }\n\n  getLineWidth() {\n    return this.lineWidth;\n  }\n\n  setFillStyle(fillStyle) {\n    this.fillStyle = fillStyle;\n  }\n\n  setStrokeStyle(strokeStyle) {\n    this.strokeStyle = strokeStyle;\n  }\n  \n  rotate(rad, origin) {\n    if(rad === 0)\n      return;\n    \n    let X, Y;\n    if (origin === null) {\n      X = this.x + this.w/2;\n      Y = this.y + this.h/2;\n    } else {\n      X = origin[0];\n      Y = origin[1];\n    }\n    \n    let T = [[ cos(rad), sin(rad), X - (X * cos(rad) + Y * sin(rad))],\n             [-sin(rad), cos(rad), Y - (Y * cos(rad) - X * sin(rad))],\n             [0        , 0       , 1]];\n    for(let i = 0; i < this.vertices.length; i++) {\n      let x = this.vertices[i][0];\n      let y = this.vertices[i][1];\n      let z = 1;\n      this.vertices[i] = [(x * T[0][0]) + (y * T[0][1]) + (z * T[0][2]),\n                          (x * T[1][0]) + (y * T[1][1]) + (z * T[1][2])];\n    }\n    // {{cos(r), sin(r), x - (x cos(r) + y sin(r))},\n    // {-(sin(r)), cos(r), y - (y cos(r) - x sin(r))}, {0, 0, 1}}\n    // *{{x,x+w,x+w,x},{y,y,y+h,y+h},{1,1,1,1}}\n  }\n}\n\nexport default Point;\n    \n","class ListNode {\n  constructor(value, next) {\n    this.value = value;\n    this.next = next;\n  }\n  setNext(listNode) {\n    this.next = listNode;\n  }\n  setValue(value) {\n    this.value = value;\n  }\n  getNext() {\n    return this.next;\n  }\n  getValue() {\n    return this.value;\n  }\n}\n\nclass LinkedList {\n  constructor() {\n    this.length = 0;\n    this.head = null;\n    this.current = null;\n  }\n\n  isEmpty() {\n    return this.length === 0;\n  }\n  \n  tail() {\n    if (this.isEmpty())\n      return null;\n    return this.current.getValue();\n  }\n\n  slice(begin, end = null) {\n    if (!end)\n      end = this.length;\n    let ret = new LinkedList();\n    let i = 0;\n    for (const nodeValue of this) {\n      if (begin <= i && i < end)\n        ret.add(nodeValue);\n      i++;\n    }\n    return ret;\n  }\n  \n  add(value) {\n    if (this.isEmpty()) {\n      this.head = new ListNode(value, null);\n      this.current = this.head;\n    } else {\n      let toAdd = new ListNode(value, null);\n      this.current.setNext(toAdd);\n      this.current = toAdd;\n    }\n    return ++this.length;\n  }\n\n  toArray() {\n    let i = 0;\n    let arr = new Array(this.length);\n    for (const nodeValue of this) {\n      arr[i++] = nodeValue;\n    }\n    return arr;\n  }\n\n  *[Symbol.iterator]() {\n    if(this.isEmpty()) {\n      return;\n    }\n    let currentNode = this.head;\n    while (currentNode.getNext()) {\n      let ret = currentNode.getValue();\n      currentNode = currentNode.getNext();\n      yield ret;\n    }\n    yield currentNode.getValue();\n  }\n}\n\n\n// let ls = new LinkedList();\n// ls.add('ant');\n// ls.add('bison');\n// ls.add('camel');\n// ls.add('duck');\n// ls.add('elephant');\n\n// for (const e of ls)\n//   console.log(e);\n\n// console.log('To Array: ' + ls.toArray());\n// console.log('Tail: ' + ls.tail());\n// // expected output: Array [\"camel\", \"duck\", \"elephant\"]\n// console.log(ls.slice(2).toArray());\n// // expected output: Array [\"camel\", \"duck\"]\n// console.log(ls.slice(2, 4).toArray());\n// // expected output: Array [\"bison\", \"camel\", \"duck\", \"elephant\"]\n// console.log(ls.slice(1, 5).toArray());\n\nexport default LinkedList;\n","class AbstractFractal {\n  constructor(width, height, maxDepth, origin) {\n    if (this.constructor === AbstractFractal) {\n      throw new Error(\"Abstract classes can't be instantiated.\");\n    }\n    this.maxDepth = maxDepth;\n    this.points = null;\n    this.width = width;\n    this.height = height;\n    this.origin = origin;\n    this.depthToPoints = new Array(10+1);\n    this.recursionDepth = -1;\n    this.setDepthToDefault();\n  }\n  \n  setDepthToDefault() {\n    this.setRecursionDepth(Math.round(this.maxDepth/2));\n  }\n  \n  setRecursionDepth(depth) {\n    this.recursionDepth = depth;\n    this.setPoints();\n  }\n\n  setDimensions(w, h) {\n    this.width = w;\n    this.height = h;\n    this.wipeOutDepthToPointArray();\n    this.setPoints();\n  }\n  \n  setPoints() {\n    if (this.pointsNeedBeSet()) {\n      // console.log('I set '+ this.getTitle() + ' for ' + this.getRecursionDepth());\n      this.depthToPoints[this.getRecursionDepth()] = this.set(\n        this.origin[0], this.origin[1],\n        this.width, this.height);\n    }\n  }\n\n  wipeOutDepthToPointArray() {\n    this.depthToPoints = new Array(10+1);\n  }\n  \n  set(/* x, y, w, h, ls=new LinkedList(), r = 0 */) {\n    throw new Error(\"Method 'set()' must be implemented.\");\n  }\n\n  pointsNeedBeSet() {\n    return !this.depthToPoints[this.getRecursionDepth()];\n  }\n  \n  getTitle() {\n    throw new Error(\"Method 'getTitle()' must be implemented.\");\n  }\n  \n  getReactState() {\n    return {\n      title: this.getTitle(),\n      width: this.getWidth(),\n      height: this.getHeight(),\n      points: this.getPoints(),\n      recursionDepth: this.getRecursionDepth(),\n      maxRecursionDepth: this.maxDepth,\n    };\n  }\n  \n  getPoints() {\n    return this.depthToPoints[this.getRecursionDepth()];\n  }\n\n  getWidth() {\n    return this.width;\n  }\n  \n  getHeight() {\n    return this.height;\n  }\n\n  getRecursionDepth() {\n    return this.recursionDepth;\n  }\n}\n\nexport default AbstractFractal;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nconst BRANCHES = 3;\nconst MIN_ANGLE = 0;\nconst MAX_ANGLE = Math.PI / 4;\nconst MIN_LENGTH = 0.30;\nconst MAX_LENGTH = 0.90;\n\nclass TreeBranch extends AbstractFractal {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 10, origin);\n  }\n\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    this.branch([x, y], 0.3 * (Math.sqrt(w * w + h * h)),\n      Math.PI / 4, this.recursionDepth, ls);\n    return ls;\n  }\n\n  branch(start, l, radians, recurLeft, ls) {\n    if (recurLeft > 0) {\n      let dir = Math.random() > 0.5 ? 1 : -1;\n      let vertices = [start, this.end(start, l, radians)];\n      let p = new Point(start[0], start[1], 0, 0, vertices, true, this.palette());\n      ls.add(p);\n      for (let i = 0; i < BRANCHES; i++) {\n        let new_l = this.rand(l * MIN_LENGTH, l * MAX_LENGTH);\n        let new_start = this.end(start, new_l, radians);\n        let new_radians = radians + dir * this.rand(MIN_ANGLE, MAX_ANGLE);\n        dir *= -1;\n        this.branch(new_start, new_l, new_radians, recurLeft - 1, ls);\n      }\n    }\n  }\n\n  end(start, radius, radians) {\n    return [start[0] + radius * Math.cos(radians),\n    start[1] + radius * Math.sin(radians)];\n  }\n\n  palette() {\n    let palette = ['#77a37a', '#5f926a', '#587e60', '#485e52', '#3a4f3f',\n      '#77a37a', '#5f926a', '#587e60', '#485e52', '#3a4f3f',\n      '#77a37a', '#5f926a', '#587e60', '#485e52', '#3a4f3f',\n      '#603C14', '#9C2706', '#D45B12', '#F3BC2E', '#5F5426'];\n    return palette[Math.round(this.rand(0, palette.length - 1))];\n  }\n\n  rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  getTitle() {\n    return 'Tree Branch Fractal';\n  }\n}\n\nexport default TreeBranch;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass Vector {\n  constructor(start, l, radians) {\n    this.start = start;\n    this.l = l;\n    this.radians = radians;\n    this.end = [this.start[0] + l * Math.cos(radians),\n    this.start[1] + l * Math.sin(radians)];\n  }\n  addVector(ls) {\n    let vertices = [this.start, this.end];\n    debugger;\n    ls.add(new Point(this.start[0], this.start[1], 0, 0, vertices, true, null, null, 3));\n    return ls;\n  }\n}\n\nclass KochSnowflake extends AbstractFractal {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 7, origin);\n  }\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    let l = Math.min(w, h);\n    let seed = new Vector([x + l / 2, y + l / 10], l * (3 / 4), Math.PI * (2 / 3));\n    ls = this.fractal(seed, ls, this.recursionDepth);\n    seed = new Vector([x + l * (35 / 40), y + l * (3 / 4)], l * (3 / 4), Math.PI * (-2 / 3));\n    ls = this.fractal(seed, ls, this.recursionDepth);\n    seed = new Vector([x + l * (5 / 40), y + l * (3 / 4)], l * (3 / 4), 0);\n    return this.fractal(seed, ls, this.recursionDepth);\n  }\n\n  fractal(v, ls, recurLeft) {\n    if (recurLeft === 0) {\n      return v.addVector(ls);  //Draw the current vector\n    } else {\n      let t1 = new Vector([v.start[0], v.start[1]], v.l / 3, v.radians);\n      let t2 = new Vector([t1.end[0], t1.end[1]], v.l / 3, v.radians + Math.PI / 3);\n      let t3 = new Vector([t2.end[0], t2.end[1]], v.l / 3, v.radians - Math.PI / 3);\n      let t4 = new Vector([t3.end[0], t3.end[1]], v.l / 3, v.radians);\n      ls = this.fractal(t1, ls, recurLeft - 1);\n      ls = this.fractal(t2, ls, recurLeft - 1);\n      ls = this.fractal(t3, ls, recurLeft - 1);\n      return this.fractal(t4, ls, recurLeft - 1);\n    }\n  }\n\n  getTitle() {\n    return 'Koch Snowflake';\n  }\n}\n\nexport default KochSnowflake;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass SierpinskiTri extends AbstractFractal {\n  set(x, y, w, h, ls=new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let vertices = [[x + w / 2, y], [x, y + h], [x + w, y + h]];\n      let p = new Point(x, y, w, h, vertices);\n      ls.add(p);\n      return ls;\n    }\n    \n    ls = this.set(  x        , y + h / 2, w / 2, h / 2, ls, ++r);\n    ls = this.set(  x + w / 2, y + h / 2, w / 2, h / 2, ls, r);\n    return this.set(x + w / 4, y        , w / 2, h / 2, ls, r);\n  }\n\n  getTitle() {\n    return 'Sierpinski\\'s Triangle';\n  }\n}\n\nexport default SierpinskiTri;\n","/*\n The code in this fractal is a little bit of a mess.\n I tried making this:\n https://fractaltales.blogspot.com/2013/08/self-similar-fractals-quilts-and.html\n*/\n\nimport Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass QuiltFractal extends AbstractFractal {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, recursionDepth, [0, 0]);\n  }\n\n  set(x, y, w, h) {\n    let l = Math.min(w, h);\n    let points = this.markPoints(x, y, l);\n    this.rotatePoints(points, 0, this.getRecursionDepth());\n    this.rotatePoints(points, 1, this.getRecursionDepth());\n    this.rotatePoints(points, 2, this.getRecursionDepth());\n    this.rotatePoints(points, 3, this.getRecursionDepth());\n    return this.rotatePoints(points, 4, this.getRecursionDepth());\n  }\n\n  markPoints(x, y, l, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, l, l, null, false, '#afff14');\n      ls.add(p);\n      return ls;\n    }\n\n    let l_new = 0.25 * l;\n    let x_new = x + 0.75 * l;\n    let y_new = y + 0.75 * l;\n    \n    ls = this.markPoints(x    , y    , l_new, ls, ++r);\n    ls = this.markPoints(x_new, y    , l_new, ls,   r);\n    ls = this.markPoints(x_new, y_new, l_new, ls,   r);\n    ls = this.markPoints(x    , y_new, l_new, ls,   r);\n    return this.markPoints(this.cord(x, l), this.cord(y, l),\n                           this.dist(l), ls, r);\n  }\n\n  rotatePoints(points, starting_block, r) {\n    if (r === 0)\n      return points;\n    \n    let indices = this.subsetIndices(starting_block, r);\n    let pointsSliced = points.slice(indices[0], indices[1]);\n    let O = pointsSliced.tail();\n    O = [O.x + O.w/2, O.y + O.h/2];\n    if (starting_block === 4)\n      this.rotateAll(pointsSliced, O);\n\n    this.rotatePoints(pointsSliced, 4, --r);\n    return points;\n  }\n\n  rotateAll(points, rotationOrigin) {\n    for (const p of points) {\n      p.rotate(Math.PI/4, rotationOrigin);\n    }\n  }\n  \n  subsetIndices(position, r) {\n    if (position > 4 || position < 0)\n      throw new Error(\"subsetIndices(position), invalid position: \" + position);\n    return [(position)*(Math.pow(5, r - 1)), (position+1)*(Math.pow(5, r - 1))];\n  }\n  \n  dist(l) {\n    return Math.sqrt(2) * l / 2;\n  }\n\n  cord(cordinate, l) {\n    return cordinate + (l / 2) - (this.dist(l) / 2);\n  }\n  \n  getTitle() {\n    return 'Some Fractal Quilt';\n  }\n}\n\nexport default QuiltFractal;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass BoxFractal extends AbstractFractal {\n  constructor(width, height, recursionDepth, origin) {\n    super(width, height, 7, origin);\n  }\n  \n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, w, h);\n      ls.add(p);\n      return ls;\n    }\n\n    ls = this.set(x, y, w / 3, h / 3, ls, ++r);\n    ls = this.set(x + 2 * w / 3, y, w / 3, h / 3, ls, r);\n    ls = this.set(x, y + 2 * h / 3, w / 3, h / 3, ls, r);\n    ls = this.set(x + 2 * w / 3, y + 2 * h / 3, w / 3, h / 3, ls, r);\n    return this.set(x + w / 3, y + h / 3, w / 3, h / 3, ls, r);\n  }\n\n  getTitle() {\n    return 'Box Fractal';\n  }\n}\n\nexport default BoxFractal;\n","import Point from './Point.js';\nimport LinkedList from './LinkedList.js';\nimport AbstractFractal from './AbstractFractal.js';\n\nclass Mondrian extends AbstractFractal {\n  set(x, y, w, h, ls = new LinkedList(), r = 0) {\n    if (r >= this.recursionDepth) {\n      let p = new Point(x, y, w, h,\n                        null, true, this.palette(), '#30303a', 5);\n      ls.add(p);\n      return ls;\n    }\n    let i = this.rand(x, w)+0.2*w;\n    let j = this.rand(y, h)+0.2*h;\n    ls = this.set(  x    , y    , x + i, y + j, ls, ++r); // upper left rectangle\n    ls = this.set(  x + i, y    , w - i, y + j, ls, r);   // upper right rectangle\n    ls = this.set(  x    , y + j, x + i, h - j, ls, r);   // lower left rectangle\n    return this.set(x + i, y + j, w - i, h - j, ls, r);   // lower right rectangle\n  }\n\n  getTitle() {\n    return 'Piet Mondrian';\n  }\n\n  palette() {\n                 // white      red        yellow     blue       black\n    let palette = ['#FEFFFA', '#F60201', '#FDED01', '#1F7FC9', '#30303a'];\n    return palette[Math.round(this.rand(0, 4))];\n  }\n  \n  rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n}\n\nexport default Mondrian;\n","import * as Fractals from './fractals/FractalIndex.js';\n\nclass Model {\n  constructor(width, height,\n              origin=[0, 0]) {\n    this.DEFAULT_MAX_DEPTH = 8;\n    \n    this.width = width;\n    this.height = height;\n    this.origin = origin;\n    this.fractal = null;\n    \n    this.options = {};\n    this.setOptions();\n  } // constructor ends here\n\n  setOptions() {\n    for (let name in Fractals) {\n      let currFrac = new Fractals[name](0, 0, 0, [0, 0]);\n      this.options[name] = currFrac.getTitle();\n    }\n    this.setNameAndFractal(Object.keys(this.options)[0]);\n  }\n\n  setNameAndFractal(name) {\n    this.name = name;\n    this.fractal = new Fractals[\n      this.name](\n        this.width,\n        this.height,\n        this.DEFAULT_MAX_DEPTH,\n        this.origin);\n    this.recursionDepth = this.fractal.getRecursionDepth();\n  }\n  \n  setRecursionDepth(depth) {\n    this.recursionDepth = depth;\n    this.getFractal().setRecursionDepth(this.recursionDepth);\n  }\n\n  getReactState() {\n    return this.getFractal().getReactState();\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  getRecursionDepth() {\n    return this.recursionDepth;\n  }\n  \n  getOptions() {\n    return this.options;\n  }\n\n  getFractal() {\n    return this.fractal;\n  }\n\n  setDimensions(w, h) {\n    this.width = w;\n    this.height = h;\n    this.getFractal().setDimensions(this.width, this.height);\n  }\n\n  updateFractal(name, width, height, depth) {\n    this.width  = width  ? width  : this.width;\n    this.height = height ? height : this.height;\n    \n    if(name !== null && this.getName() !== name) {\n      this.setNameAndFractal(name);\n    } else if (depth !== null && this.getRecursionDepth() !== depth) {\n      this.setRecursionDepth(depth);\n    } else {\n      this.setDimensions(this.width, this.height);\n    }\n    return this.getReactState();\n  }\n}\n\nexport default Model;\n","class Control {\n  constructor(app) {\n    this.app = app;\n  }\n\n  sliderEventHandler = (event) => {\n    let newDepth = Number(event.target.value);\n    let state = this.app.model.updateFractal(null, null, null, newDepth);\n    this.app.setState(state);\n  }\n\n  dropdownEventHandler = (event) => {\n    let newName = event.target.value;\n    let state = this.app.model.updateFractal(newName, null, null, null);\n    this.app.setState(state);\n  }\n\n  onWindowResize = () => {\n    let state = this.app.model.updateFractal(\n      null,this.app.getWinWidth(), this.app.getWinHeight(), null);\n    this.app.setState(state);\n  }\n}\n\nexport default Control;\n","import '../css/Slider.css';\n\nimport React, { Component } from 'react';\n\nclass Slider extends Component {\n  render() {\n    return <input\n             id='slider'\n             type='range'\n             min='0'\n             max={this.props.sliderMaxValue.toString()}\n             autoComplete='off'\n             value={this.props.sliderInitialValue}\n             onChange={this.props.eventHandler}\n           />;\n  }\n}\n\nexport default Slider;\n\n","import '../css/Dropdown.css';\n\nimport React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    let optionsList = Object.entries(this.props.dropdownOptions);\n    this.options = new Array(optionsList.length);\n\n    optionsList.forEach((op, i) => {\n      this.options[i] = <option\n                          key={i}\n                          value={op[0]}>\n                          {op[1]}\n                        </option>;\n    });\n  }\n\n  render() {\n    return <select id='dropdown'\n             onChange={this.props.eventHandler}>\n             {this.options}\n           </select>;\n  }\n}\n\nexport default Dropdown;\n","import '../css/Header.css';\n\nimport Slider from './Slider.js';\nimport Dropdown from './Dropdown.js';\nimport React, { Component } from 'react';\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <h1 id='header'> {\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={\n            'https://duckduckgo.com/?q='\n              + this.props.title\n          }>\n          {this.props.title}\n        </a>\n      }\n        <Slider\n          eventHandler={this.props.sliderEventHandler}\n          sliderInitialValue={this.props.sliderInitialValue}\n          sliderMaxValue={this.props.sliderMaxValue}\n        />\n        <Dropdown\n          eventHandler={this.props.dropdownEventHandler}\n          dropdownOptions={this.props.dropdownOptions}\n        />\n      </h1>\n    );\n  }\n}\nexport default Header;\n","import '../css/FractalPane.css';\n\nimport React, { Component } from 'react';\n\nclass FractalPane extends Component {\n\n  plotPoints(toClearPreviousPlot=false) {\n    let canvas = this.refs.canvas;\n    const context = canvas.getContext('2d');\n    if (toClearPreviousPlot) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n    let points = this.props.fractal.points;\n    for (const p of points) {\n      this.drawPoint(context, p);\n    }\n  }\n  \n  componentDidMount() {\n    this.plotPoints();\n  }\n\n  componentDidUpdate() {\n    this.plotPoints(true);\n  }\n\n  drawPoint(context, point) {\n    context.fillStyle = point.getFillStyle();\n    context.strokeStyle = point.getStrokeStyle();\n    context.lineWidth = point.getLineWidth();\n    context.beginPath();\n    \n    let vert = point.getVertices();\n    // vert.push(vert[0]);\n    context.moveTo(vert[0][0], vert[0][1]);\n\n    for (let i = 1; i < vert.length; i++) {\n      context.lineTo(vert[i][0], vert[i][1]);\n    }\n\n    context.closePath();\n    context.stroke();\n    \n    if (point.fill()) {\n      context.fill();\n    }\n  }\n\n  render() {\n    let width, height;\n    width = this.props.fractal.width;\n    height = this.props.fractal.height;\n    return <canvas\n             id='fractal_pane'\n             ref=\"canvas\"\n             width={width}\n             height={height}\n           />;\n  }\n}\n\nexport default FractalPane;\n","import React, { Component } from 'react';\nimport Model from '../model/Model.js';\nimport Control from '../control/Control.js';\nimport { FractalPane, Header } from './components/ComponentIndex.js';\nimport './css/App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.MARGIN = 0;\n    this.control = new Control(this);\n    this.model = new Model(this.getWinWidth(), this.getWinHeight());\n    this.state = this.model.getReactState();\n    window.addEventListener(\"resize\", this.control.onWindowResize);\n  }\n\n  getWinWidth() {\n    return window.innerWidth;\n  }\n\n  getWinHeight() {\n    return window.innerHeight;\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          sliderEventHandler={this.control.sliderEventHandler}\n          sliderInitialValue={this.state.recursionDepth}\n          sliderMaxValue={this.state.maxRecursionDepth}\n          dropdownEventHandler={this.control.dropdownEventHandler}\n          dropdownOptions={this.model.getOptions()}\n          title={this.state.title}\n        />\n        <FractalPane fractal={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './view/css/index.css';\nimport App from './view/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}